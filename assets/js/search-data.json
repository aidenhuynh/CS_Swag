{
  
    
        "post0": {
            "title": "Week 15 - Team Grades",
            "content": "Week 15 Grades . . Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . Lesson Aiden Jeffrey Luke James Jagger . Sections 5-7 | 0.95/1 | 0.95/1 | 0.85/1 | 0.35/1 | 0.95/1 | . Section 8-10 | 1/1 | 0.75/1* | 0.7/1 | 0.5/1 | 0.9/1 | . *on section 8-10 grades for Jeffrey, there is only one grade posted for the name jeffrey but there are two in this class. .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/12/07/team_grades.html",
            "relUrl": "/markdown/2022/12/07/team_grades.html",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 3 Sections 5-7",
            "content": "Lesson Overview: 3.5 - Boolean Expressions . Here we will focus on: basics of Booleans | its relationship with binary | relational operators | Logical Operators | . | . What is a boolean? . A data type with two possible values: true or false | . Boolean and Binary . So similar yet so different. . Boolean math and binary notation both use the same two ciphers: 1 and 0. | However, please note that Boolean quantities are restricted to a singlular bit (can only be either 1, or 0) | On the otherhand, binary numbers may be composed of many bits adding up in place-weighted form to any finite value, or size | . Must Knows . A Boolean value is either TRUE or FALSE | The AP Exam will provide you with a reference sheet with the operators below. | . . A few ways these operators could be used... | . . Relational Operators in action . How could you use operators to determine if the average of 5 grades is greater than 80? | . With the grades below, use a boolean expression to determine if the average grade is above an 80 and print the result (True or False) | Try it in as few steps as possible! | Be creative! There are obviously TONS of different practical solutions | . gradeList = [90, 65, 60, 75, 95] averageGrade = sum(gradeList)/len(gradeList) if averageGrade &gt; 80: print(&quot;The average grade is: &quot; + averageGrade + &quot;%&quot;) else: print(&quot;The average grade is below 80%.&quot;) . The average grade is below 80%. . The versatility of relational operators: . print(&quot;100 == 100:&quot;,100==100) print(&quot;Hello == Adios:&quot;,&quot;greeting&quot;==&quot;farewell&quot;) print(&quot;Hello != Adios:&quot;,&quot;greeting&quot;!=&quot;farewell&quot;) print(&quot;Hello == Hola:&quot;,&quot;greeting&quot;==&quot;greeting&quot;) print(&quot;5&gt;=4:&quot;, 5&gt;=4) print (&#39;&#39;) # Notice that relational operators can even work on lists! # For lists, the relational operator compares each respective component until an answer is derived print(&quot;[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;] &gt; [&#39;x&#39;,&#39;y&#39;,&#39;z&#39;]:&quot;, [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;] &gt; [&#39;x&#39;,&#39;y&#39;,&#39;z&#39;]) print(&quot;[1,2,3,5] &gt; [1,2,3,4]:&quot;, [1,2,3,5] &gt; [1,2,3,4]) print(&quot;[1,2,3,5] &lt; [1,2,3,4]:&quot;, [1,2,3,5] &lt; [1,2,3,4]) print(&quot;[1,2,3,5] == [1,2,3,4]:&quot;, [1,2,3,5] == [1,2,3,4]) . 100 == 100: True Hello == Adios: False Hello != Adios: True Hello == Hola: True 5&gt;=4: True [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;] &gt; [&#39;x&#39;,&#39;y&#39;,&#39;z&#39;]: False [1,2,3,5] &gt; [1,2,3,4]: True [1,2,3,5] &lt; [1,2,3,4]: False [1,2,3,5] == [1,2,3,4]: False . Logical Operators! . These types of operators don&#39;t necessarily deal with equivalent/non-equivalent values, but they rather work on operands to produce a singular boolean result . AND : returns TRUE if the operands around it are TRUE | OR : returns TRUE if at least one operand is TRUE | NOT : returns TRUE if the following boolean is FALSE | . Turn the following arithmetic phrases into either True or False statements as indicated USING LOGICAL OPERATORS . print(&quot;1 &gt; 2 or 5 &lt; 12:&quot;, 1 &gt; 2 or 5 &lt; 12) # Output TRUE using OR ^ # Output FALSE using NOT print(&quot;24 &gt; 8:&quot;, not 24 &gt; 8) # Output FALSE using AND print(&quot;10 &gt; 20:&quot;, 10 &gt; 20 and 20 &lt; 10) . 1 &gt; 2 or 5 &lt; 12: True 24 &gt; 8: False 10 &gt; 20: False . Lesson Overview: 3.6 - Conditionals . Focusing on Selection . Selection: uses a condition that evaluates to true or false . Selection determines which part of an algorithm are executed based on a condition being true or false . Algorithm is a finite set of instructions that accomplish a specific task . Conditional Statements . Also known as &quot;if statements&quot; . Can be seen as if statements or if blocks . . Can also be seen as if else statements or if else-blocks . x = 20 y = 10 if x &gt; y: print(&quot;x is greater than y&quot;) . x is greater than y . x = 20 y = 10 if x &gt; y: print(&quot;x is greater than y&quot;) else: print(&quot;x is not greater than y&quot;) . x is greater than y . Participation . -Calculate the total sum of two numbers, if it is equal to 200, print 200, if otherwise, print the sum. . num1 = 100 num2 = 150 sum = num1 + num2 # you could just do # print(sum) # because if it&#39;s 200 it&#39;ll print 200 anyways lol if sum == 200: print(200) # or just print(sum)... else: print(sum) . 250 . Lesson Overview - 3.7 Nested Conditionals . Nested conditional statements consist of conditional statements within other conditional statements | Utilizes &quot;if else&quot; statements within &quot;if else&quot; statements | . Basics of a nested conditional: | . Block Coding Visual of Nested Conditionals: | Example Psuedocode of Nested Conditional Statements | . Analyzing Code Walkthrough . Psuedocode to the left, block code to the right | Approach the problem by going through each condition one at a time . Decide which ones are false to skip and which ones are true to execute | . | You Try: . | . score = 82 if (score &gt;= 90) { console.log(&quot;You got an A, congrats!&quot;) } else { if (score &gt;= 75) { console.log(&quot;Please come to retake up to a 90 next week at tutorial!&quot;) } else { console.log(&quot;You have detention!&quot;) } } . protein = 25 carbs = 36 sugar = 11 if (carbs &gt;= 55 || protein &lt;= 20 || sugar &gt;= 15) { console.log(&quot;Your lunch is too unhealthy, please pick a new one&quot;) } else { if (carbs &lt; 35 || protein &lt; 25) { console.log (&quot;This lunch is alright but try to add some more carbs or protein&quot;) } else { if (sugar &gt;= 11) { console.log (&quot;Looks great but lets see if we can cut down on sugar, we don&#39;t want diabetes!&quot;) } else { console.log (&quot;Amazing, you created a healthy lunch!!!&quot;) } } } . Writing Nested Code Activity . Write a program that fits these conditions using nested conditionals: If a person has at least 8 hours, they are experienced | If a person is experienced their salary is 90k, if they have ten hours or above their salary 150k | If a person is inexperienced their salary is always 50k | print the salary of the person at the end and whether they are experienced or not | . | var hrs = 10 var salary = &quot;&quot; var experienced = true if (hrs &gt;= 10) { salary = &quot;150k&quot; } else if (hrs &gt;= 8) { salary = &quot;90k&quot; } else { salary = &quot;50k&quot; experienced = false } console.log(&quot;This person has... n&quot; + &quot;Salary: &quot; + salary + &quot; n&quot; + &quot;Experience: &quot; + experienced) . This person has... Salary: 150k Experience: true . Hacks Assignments: . Conditionals: . Write a program that fits these conditions using nested conditionals: If the product is expired, print &quot;this product is no good&quot; | If the cost is above 50 dollars, and the product isn&#39;t expired, print &quot;this product is too expensive&quot; | If the cost is more than 25 dollars but under 50, and the product isn&#39;t expired, print &quot;this is a regular product&quot; | If the cost is under 25 dollars, print &quot;this is a cheap product&quot; | . | . product = {&quot;expired&quot;:false, &quot;cost&quot;:10} if (product[&quot;expired&quot;] == true) { console.log(&quot;This product is no good!!!!!!!&quot;) } else { if (product[&quot;cost&quot;] &gt; 50) { console.log(&quot;THis product is too expensive!11111&quot;) } else if (product[&quot;cost&quot;] &gt; 25) { console.log(&quot;this product normal&quot;) } else { console.log(&quot;cheap&quot;) } } . cheap . Boolean/Conditionals: . Create a multiple choice quiz that ... uses Boolean expressions | uses Logical operators | uses Conditional statements | prompts quiz-taker with multiple options (only one can be right) | has at least 3 questions | . | Points will be awarded for creativity, intricacy, and how well Boolean/Binary concepts have been intertwined | . qAndA = { &quot;question&quot; : [&quot;What language was this quiz coded in?&quot;, &quot;sus amognsu&quot;, &quot;what do you think of kanye&quot;], &quot;answers&quot; : [[&quot;python&quot;,&quot;english&quot;,&quot;java&quot;,&quot;javascript&quot;], [&quot;among us&quot;,&quot;sussy baka&quot;,&quot;among among&quot;,&quot;agmosnus&quot;], [&quot;great&quot;,&quot;ok&quot;,&quot;meh&quot;,&quot;no good&quot;]], &quot;correct&quot; : [&quot;a&quot;, &quot;b&quot;, &quot;d&quot;], &quot;letters&quot; : [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;] } totalQs = len(qAndA[&quot;question&quot;]) i = 0 score = 0 while i != totalQs: qAnswered = False currentQ = qAndA[&quot;question&quot;][i] print(currentQ + &quot; n&quot;) n = 0 while n &lt; 4: print(str(qAndA[&quot;letters&quot;][n]) + &quot;: &quot; + str(qAndA[&quot;answers&quot;][i][n])) n += 1 ans = input(currentQ) ans.lower() print(&quot;&quot;) while qAnswered == False: if ans == &quot;a&quot; or &quot;b&quot; or &quot;c&quot; or &quot;d&quot;: if ans == qAndA[&quot;correct&quot;][i]: score += 1 print(&quot;correct!11111&quot;) else: print(&quot;NO&quot;) qAnswered = True else: print(&quot;Enter a valid letter option (a, b, c, or d)&quot;) print(&quot;you score is: &quot; + str(score) + &quot; n&quot;) i += 1 . What language was this quiz coded in? a: python b: english c: java d: javascript correct!11111 you score is: 1 sus amognsu a: among us b: sussy baka c: among among d: agmosnus correct!11111 you score is: 2 what do you think of kanye a: great b: ok c: meh d: no good correct!11111 you score is: 3 .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/booleans",
            "relUrl": "/jupyter/booleans",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Lists and Iteration",
            "content": "Lists . What are lists? . Lists: a sequence of variables . we can use lists to store multiple items into one variable | used to store collections of data | changeable, ordered, allow duplicates | . List examples in Python, JavaScript, and Pseudocode. . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] print (fruits) . const fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;]; . fruits ← [apple, grape, strawberry] . More list examples . brands = [&quot;nike&quot;, &quot;adidas&quot;, &quot;underarmour&quot;] #string numbers = [1, 2, 3, 4, 5] #integer truefalse = [True, False, True] #boolean . Lists are just one of four collection data types in Python . Tuple: collection that is ordered, unchangeable, allows duplicates | Set: collection that is unordered, unchangeable, doesn&#39;t allow duplicates | Dictionary: collection that is ordered, changeable, doesn&#39;t allow duplicates | . Terms . Index: a term used to sort data in order to reference to an element in a list (allows for duplicates) | Elements: the values in the list assigned to an index | . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] index = 1 print (fruits[index]) . Methods in Lists . Method Definition Example . append() | adds element to the end of the list | fruits.append(&quot;watermelon&quot;) | . index() | returns the index of the first element with the specified value | fruits.index(&quot;apple&quot;) | . insert() | adds element at given position | fruits.insert(1, &quot;watermelon&quot;) | . remove() | removes the first item with the specified value | fruits.remove(&quot;strawberry&quot;) | . reverse() | reverses the list order | fruits.reverse() | . sort() | sorts the list | fruits.sort() | . count() | returns the amount of elements with the specified value | fruits.count(&quot;apple&quot;) | . copy() | returns a copy of the list | fruits.copy() | . clear() | removes the elements from the list | fruits.clear() | . sports = [&quot;football&quot;, &quot;hockey&quot;, &quot;baseball&quot;, &quot;basketball&quot;] # change the value &quot;soccer&quot; to &quot;hockey&quot; print (sports) . [&#39;football&#39;, &#39;hockey&#39;, &#39;baseball&#39;, &#39;basketball&#39;] . sports = [&quot;football&quot;, &quot;soccer&quot;, &quot;baseball&quot;, &quot;basketball&quot;, &quot;golf&quot;] # add &quot;golf&quot; as the 3rd element in the list print (sports) . [&#39;football&#39;, &#39;soccer&#39;, &#39;baseball&#39;, &#39;basketball&#39;, &#39;golf&#39;] . Try this . Determine the output of the code segment | . . This will output &quot;unusual&quot;, &quot;bold&quot;, &quot;away&quot; . Iteration . stuff . title:Iteration HW- toc: true | comments: true | categories: [iteration] | tags: [iteration] | . First, what not to do . Iteration is important for your time and sanity . print(&quot;alpha&quot;) print(&quot;bravo&quot;) print(&quot;charlie&quot;) print(&quot;delta&quot;) print(&quot;echo&quot;) print(&quot;foxtrot&quot;) print(&quot;golf&quot;) print(&quot;hotel&quot;) print(&quot;india&quot;) print(&quot;juliett&quot;) print(&quot;kilo&quot;) print(&quot;lima&quot;) print(&quot;mike&quot;) print(&quot;november&quot;) print(&quot;oscar&quot;) print(&quot;papa&quot;) print(&quot;quebec&quot;) print(&quot;romeo&quot;) print(&quot;sierra&quot;) print(&quot;tango&quot;) print(&quot;uniform&quot;) print(&quot;victor&quot;) print(&quot;whiskey&quot;) print(&quot;x-ray&quot;) print(&quot;yankee&quot;) print(&quot;zulu&quot;) #please help me . Coding all of these individually takes a lot of unnecessary time, how can we shorten this time? . Iteration . Iteration is the repetition of a process or utterance applied to the result or taken from a previous statement. There&#39;s a lot of types of iteration though, what to use? How do we apply iteration to lists? . Some methods include using a &quot;for loop&quot;, using a &quot;for loop and range()&quot;, using a &quot;while loop&quot;, and using comprehension . Lists, tuples, dictionaries, and sets are iterable objects. They are the &#39;containers&#39; that store the data to iterate. . Each of these containers are able to iterate with the iter() command. . There are 2 types of iteration:definite and indefinite. Definite iteration clarifies how many times the loop is going to run, while indefinite specifies a condition that must be met . for variable in iterable: statement() . Iterator? Iterable? Iteration? . When an object is iterable it can be used in an iteration | When passed through the function iter() it returns an iterator | Strings, lists, dictionaries, sets and tuples are all examples of iterable objects. | . a = [&#39;alpha&#39;, &#39;bravo&#39;, &#39;charlie&#39;] itr = iter(a) print(next(itr)) print(next(itr)) print(next(itr)) . alpha bravo charlie . Loops . Well, above is basically just printing them again, so how do we takes these iterators into something we can make use for? | Loops take essentially what we did above and automates it, here are some examples. | . list = [&quot;Alpha&quot;, &quot;Bravo&quot;, &quot;Charlie&quot;, &quot;Delta&quot;, &quot;Echo&quot;, &quot;Foxtrot&quot;, &quot;Golf&quot;, &quot;Hotel&quot;, &quot;India&quot;, &quot;Juliett&quot;, &quot;Kilo&quot;, &quot;Lima&quot;, &quot;Mike&quot;, &quot;November&quot;, &quot;Oscar&quot;, &quot;Papa&quot;, &quot;Quebec&quot;, &quot;Romeo&quot;, &quot;Sierra&quot;, &quot;Tango&quot;, &quot;Uniform&quot;, &quot;Victor&quot;, &quot;Whiskey&quot;, &quot;X-ray&quot;, &quot;Yankee&quot;, &quot;Zulu&quot;] # using a for loop for i in list: #for item in the list, print the item print(i) . list = [&quot;Alpha&quot;, &quot;Bravo&quot;, &quot;Charlie&quot;, &quot;Delta&quot;, &quot;Echo&quot;, &quot;Foxtrot&quot;, &quot;Golf&quot;, &quot;Hotel&quot;, &quot;India&quot;, &quot;Juliett&quot;, &quot;Kilo&quot;, &quot;Lima&quot;, &quot;Mike&quot;, &quot;November&quot;, &quot;Oscar&quot;, &quot;Papa&quot;, &quot;Quebec&quot;, &quot;Romeo&quot;, &quot;Sierra&quot;, &quot;Tango&quot;, &quot;Uniform&quot;, &quot;Victor&quot;, &quot;Whiskey&quot;, &quot;X-ray&quot;, &quot;Yankee&quot;, &quot;Zulu&quot;] # Taking the length of the list lengthList = len(list) # Iteration using the amount of items in the list for i in range(lengthList): print(list[i]) . list = [&quot;Alpha&quot;, &quot;Bravo&quot;, &quot;Charlie&quot;, &quot;Delta&quot;, &quot;Echo&quot;, &quot;Foxtrot&quot;, &quot;Golf&quot;, &quot;Hotel&quot;, &quot;India&quot;, &quot;Juliett&quot;, &quot;Kilo&quot;, &quot;Lima&quot;, &quot;Mike&quot;, &quot;November&quot;, &quot;Oscar&quot;, &quot;Papa&quot;, &quot;Quebec&quot;, &quot;Romeo&quot;, &quot;Sierra&quot;, &quot;Tango&quot;, &quot;Uniform&quot;, &quot;Victor&quot;, &quot;Whiskey&quot;, &quot;X-ray&quot;, &quot;Yankee&quot;, &quot;Zulu&quot;] # Once again, taking the length of the list lengthList = len(list) # Setting the variable we are going to use as 0 i=0 # Iteration using the while loop # Argument saying WHILE a certain variable is a certain condition, the code should run while i &lt; lengthList: print(list[i]) i += 1 . Using the range() function . But wait, there&#39;s more . Need to save even more time? The above is useful for many occasions, but can get tedious fast, in this case, use range() | . x = range(5) for n in x: print(n) . 0 1 2 3 4 . Else, elif, and break . For when 1 statement isn&#39;t enough . Else:when the condition does not meet, do statement()- Elif: when the condition does not meet, but meets another condition, do statement() | Break: stop the loop | . HW Iteration . Use the list below to turn the first letter of any word (using input()) into its respective NATO phonetic alphabet word . Ex: . list -&gt; . lima india sierra tango . words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] inp = input().lower() output = &quot;&quot; for letter in inp: for word in words: if letter == word[0]: output += word + &quot; &quot; print(inp + &quot; -&gt; n&quot; + output) . bruh bravo romeo uniform hotel . 2D Iteration . 2D Arrays . A 2D array is simply just a list of lists. The example below is technically correct but... . keypad = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [&quot; &quot;, 0, &quot; &quot;]] . Conventially 2D arrays are written like below. This is because 2D arrays are meant to be read in 2 dimensions (hence the name). Writing them like below makes them easier to visualize and understand. . keypad = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [&quot; &quot;, 0, &quot; &quot;]] . Printing a 2D Array . We already know that we can&#39;t just print the matrix by calling it. We need to iterate through it to print it. . def print_matrix1(matrix): for i in range(len(matrix)): # outer for loop. This runs on i which represents the row. range(len(matrix)) is in order to iterate through the length of the matrix for j in range(len(matrix[i])): # inner for loop. This runs on the length of the i&#39;th row in the matrix (j changes for each row with a different length) print(matrix[i][j], end=&quot; &quot;) # [i][j] is the 2D location of that value in the matrix, kinda like a coordinate pair. [i] iterates to the specific row and [j] iterates to the specific value in the row. end=&quot; &quot; changes the end value to space, not a new line. print() # prints extra line. this is in the outer loop, not the inner loop, because it only wants to print a new line for each row . print(&quot;Raw matrix (list of lists): &quot;) print(keypad) print(&quot;Matrix printed using nested for loop iteration:&quot;) print_matrix1(keypad) print() . Raw matrix (list of lists): [[1, 2, 3], [4, 5, 6], [7, 8, 9], [&#39; &#39;, 0, &#39; &#39;]] Matrix printed using nested for loop iteration 1 2 3 4 5 6 7 8 9 0 . def print_matrix2(matrix): for row in matrix: # Iterates through each &quot;row&quot; of matrix. Row is a dummy variable, it could technically be anything. It iterates through each value of matrix and each value is it&#39;s own list. in this syntax the list is stored in &quot;row&quot;. for col in row: # Iterates through each value in row. Again col, column, is a dummy variable. Each value in row is stored in col. print(col, end=&quot; &quot;) # Same as 1 print() # Same as 1 print_matrix2(keypad) . 1 2 3 4 5 6 7 8 9 0 . More Functions . Try to find another way to print the matrix. Only complete one of the two (unless you&#39;d like to do both). Below is a hint . fruit = [&quot;apples&quot;, &quot;bananas&quot;, &quot;grapes&quot;] print(fruit) print(*fruit) # Python built in function: &quot;*&quot;. Figure out what it does . [&#39;apples&#39;, &#39;bananas&#39;, &#39;grapes&#39;] apples bananas grapes . keypad = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [&quot; &quot;, 0, &quot; &quot;]] def print_matrix3(matrix): for i in matrix: print(*i) print_matrix3(keypad) . 1 2 3 4 5 6 7 8 9 0 . Alternatively, find a way to print the matrix using the iter() function you already learned. Or use both! . def print_matrix4(matrix): code = &quot;your code goes here&quot; . keyboard = [[&quot;`&quot;, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, &quot;-&quot;, &quot;=&quot;], [&quot;Q&quot;, &quot;W&quot;, &quot;E&quot;, &quot;R&quot;, &quot;T&quot;, &quot;Y&quot;, &quot;U&quot;, &quot;I&quot;, &quot;O&quot;, &quot;P&quot;, &quot;[&quot;, &quot;]&quot;], [&quot;A&quot;, &quot;S&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;;&quot;, &quot;&#39;&quot;], [&quot;Z&quot;, &quot;X&quot;, &quot;C&quot;, &quot;V&quot;, &quot;B&quot;, &quot;N&quot;, &quot;M&quot;, &quot;,&quot;, &quot;.&quot;, &quot;/&quot;]] . Print what month you were born and how old you are by iterating through the keyboard (don&#39;t just write a string). . keyboard = [[&quot;`&quot;, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, &quot;-&quot;, &quot;=&quot;], [&quot;Q&quot;, &quot;W&quot;, &quot;E&quot;, &quot;R&quot;, &quot;T&quot;, &quot;Y&quot;, &quot;U&quot;, &quot;I&quot;, &quot;O&quot;, &quot;P&quot;, &quot;[&quot;, &quot;]&quot;], [&quot;A&quot;, &quot;S&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;;&quot;, &quot;&#39;&quot;], [&quot;Z&quot;, &quot;X&quot;, &quot;C&quot;, &quot;V&quot;, &quot;B&quot;, &quot;N&quot;, &quot;M&quot;, &quot;,&quot;, &quot;.&quot;, &quot;/&quot;]] print(str(keyboard[0][5]) + str(keyboard[3][9]) + str(keyboard[0][1]) + str(keyboard[0][2]) + str(keyboard[3][9]) + str(keyboard[0][2]) + str(keyboard[0][10]) + str(keyboard[0][10]) + str(keyboard[0][6]) + &quot; n&quot; + str(keyboard[0][1]) + str(keyboard[0][6])) . 5/12/2006 16 . Challenge . Change all of the letters that you DIDN&#39;T print above to spaces, &quot; &quot;, and then print the full keyboard. (the things you did print should remain in the same spot) . Alternative Challenge: If you would prefer, animate it using some form of delay so it flashes one of your letters at a time on the board in order and repeats. (this one may be slightly more intuitive) . DO NOT HARD CODE THIS. Don&#39;t make it harder on yourself, iterate through, make it abstract so it can be used dynamically. You should be able to input any string and your code should work. . . 1 6 R A H C M . If you get stuck you can just make a picture with an array and print it (I will grade based on how good it looks) . I do expect an attempt so write some code to show you tried the challenge. . keyboard = [[&quot;`&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;0&quot;, &quot;-&quot;, &quot;=&quot;], [&quot;Q&quot;, &quot;W&quot;, &quot;E&quot;, &quot;R&quot;, &quot;T&quot;, &quot;Y&quot;, &quot;U&quot;, &quot;I&quot;, &quot;O&quot;, &quot;P&quot;, &quot;[&quot;, &quot;]&quot;], [&quot;A&quot;, &quot;S&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;;&quot;, &quot;&#39;&quot;], [&quot;Z&quot;, &quot;X&quot;, &quot;C&quot;, &quot;V&quot;, &quot;B&quot;, &quot;N&quot;, &quot;M&quot;, &quot;,&quot;, &quot;.&quot;, &quot;/&quot;]] for row in keyboard: for item in row: print(item, end = &quot; &quot;) print() . ` 1 2 3 4 5 6 7 8 9 0 - = Q W E R T Y U I O P [ ] A S D F G H J K L ; &#39; Z X C V B N M , . / . keyboard = [[&quot;`&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;0&quot;, &quot;-&quot;, &quot;=&quot;], [&quot;Q&quot;, &quot;W&quot;, &quot;E&quot;, &quot;R&quot;, &quot;T&quot;, &quot;Y&quot;, &quot;U&quot;, &quot;I&quot;, &quot;O&quot;, &quot;P&quot;, &quot;[&quot;, &quot;]&quot;], [&quot;A&quot;, &quot;S&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;;&quot;, &quot;&#39;&quot;], [&quot;Z&quot;, &quot;X&quot;, &quot;C&quot;, &quot;V&quot;, &quot;B&quot;, &quot;N&quot;, &quot;M&quot;, &quot;,&quot;, &quot;.&quot;, &quot;/&quot;]] inp = input() for row in keyboard: for item in row: letterFound = True for letter in inp: if letter.lower() == item.lower(): print(letter.upper(), end = &quot;&quot;) else: letterFound = False if letterFound == False: print(&quot; &quot;, end = &quot; &quot;) print() # it kind of works:) . R U H B .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/iteration",
            "relUrl": "/jupyter/iteration",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 3 Sections 5-7",
            "content": "Lesson Overview: 3.5 - Boolean Expressions . Here we will focus on: basics of Booleans | its relationship with binary | relational operators | Logical Operators | . | . What is a boolean? . A data type with two possible values: true or false | . Boolean and Binary . So similar yet so different. . Boolean math and binary notation both use the same two ciphers: 1 and 0. | However, please note that Boolean quantities are restricted to a singlular bit (can only be either 1, or 0) | On the otherhand, binary numbers may be composed of many bits adding up in place-weighted form to any finite value, or size | . Must Knows . A Boolean value is either TRUE or FALSE | The AP Exam will provide you with a reference sheet with the operators below. | . . A few ways these operators could be used... | . . Relational Operators in action . How could you use operators to determine if the average of 5 grades is greater than 80? | . With the grades below, use a boolean expression to determine if the average grade is above an 80 and print the result (True or False) | Try it in as few steps as possible! | Be creative! There are obviously TONS of different practical solutions | . gradeList = [90, 65, 60, 75, 95] averageGrade = sum(gradeList)/len(gradeList) if averageGrade &gt; 80: print(&quot;The average grade is: &quot; + averageGrade + &quot;%&quot;) else: print(&quot;The average grade is below 80%.&quot;) . The average grade is below 80%. . The versatility of relational operators: . print(&quot;100 == 100:&quot;,100==100) print(&quot;Hello == Adios:&quot;,&quot;greeting&quot;==&quot;farewell&quot;) print(&quot;Hello != Adios:&quot;,&quot;greeting&quot;!=&quot;farewell&quot;) print(&quot;Hello == Hola:&quot;,&quot;greeting&quot;==&quot;greeting&quot;) print(&quot;5&gt;=4:&quot;, 5&gt;=4) print (&#39;&#39;) # Notice that relational operators can even work on lists! # For lists, the relational operator compares each respective component until an answer is derived print(&quot;[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;] &gt; [&#39;x&#39;,&#39;y&#39;,&#39;z&#39;]:&quot;, [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;] &gt; [&#39;x&#39;,&#39;y&#39;,&#39;z&#39;]) print(&quot;[1,2,3,5] &gt; [1,2,3,4]:&quot;, [1,2,3,5] &gt; [1,2,3,4]) print(&quot;[1,2,3,5] &lt; [1,2,3,4]:&quot;, [1,2,3,5] &lt; [1,2,3,4]) print(&quot;[1,2,3,5] == [1,2,3,4]:&quot;, [1,2,3,5] == [1,2,3,4]) . 100 == 100: True Hello == Adios: False Hello != Adios: True Hello == Hola: True 5&gt;=4: True [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;] &gt; [&#39;x&#39;,&#39;y&#39;,&#39;z&#39;]: False [1,2,3,5] &gt; [1,2,3,4]: True [1,2,3,5] &lt; [1,2,3,4]: False [1,2,3,5] == [1,2,3,4]: False . Logical Operators! . These types of operators don&#39;t necessarily deal with equivalent/non-equivalent values, but they rather work on operands to produce a singular boolean result . AND : returns TRUE if the operands around it are TRUE | OR : returns TRUE if at least one operand is TRUE | NOT : returns TRUE if the following boolean is FALSE | . Turn the following arithmetic phrases into either True or False statements as indicated USING LOGICAL OPERATORS . print(&quot;1 &gt; 2 or 5 &lt; 12:&quot;, 1 &gt; 2 or 5 &lt; 12) # Output TRUE using OR ^ # Output FALSE using NOT print(&quot;24 &gt; 8:&quot;, not 24 &gt; 8) # Output FALSE using AND print(&quot;10 &gt; 20:&quot;, 10 &gt; 20 and 20 &lt; 10) . 1 &gt; 2 or 5 &lt; 12: True 24 &gt; 8: False 10 &gt; 20: False . Lesson Overview: 3.6 - Conditionals . Focusing on Selection . Selection: uses a condition that evaluates to true or false . Selection determines which part of an algorithm are executed based on a condition being true or false . Algorithm is a finite set of instructions that accomplish a specific task . Conditional Statements . Also known as &quot;if statements&quot; . Can be seen as if statements or if blocks . . Can also be seen as if else statements or if else-blocks . x = 20 y = 10 if x &gt; y: print(&quot;x is greater than y&quot;) . x is greater than y . x = 20 y = 10 if x &gt; y: print(&quot;x is greater than y&quot;) else: print(&quot;x is not greater than y&quot;) . x is greater than y . Participation . -Calculate the total sum of two numbers, if it is equal to 200, print 200, if otherwise, print the sum. . num1 = 100 num2 = 150 sum = num1 + num2 # you could just do # print(sum) # because if it&#39;s 200 it&#39;ll print 200 anyways lol if sum == 200: print(200) # or just print(sum)... else: print(sum) . 250 . Lesson Overview - 3.7 Nested Conditionals . Nested conditional statements consist of conditional statements within other conditional statements | Utilizes &quot;if else&quot; statements within &quot;if else&quot; statements | . Basics of a nested conditional: | . Block Coding Visual of Nested Conditionals: | Example Psuedocode of Nested Conditional Statements | . Analyzing Code Walkthrough . Psuedocode to the left, block code to the right | Approach the problem by going through each condition one at a time . Decide which ones are false to skip and which ones are true to execute | . | You Try: . | . score = 82 if (score &gt;= 90) { console.log(&quot;You got an A, congrats!&quot;) } else { if (score &gt;= 75) { console.log(&quot;Please come to retake up to a 90 next week at tutorial!&quot;) } else { console.log(&quot;You have detention!&quot;) } } . protein = 25 carbs = 36 sugar = 11 if (carbs &gt;= 55 || protein &lt;= 20 || sugar &gt;= 15) { console.log(&quot;Your lunch is too unhealthy, please pick a new one&quot;) } else { if (carbs &lt; 35 || protein &lt; 25) { console.log (&quot;This lunch is alright but try to add some more carbs or protein&quot;) } else { if (sugar &gt;= 11) { console.log (&quot;Looks great but lets see if we can cut down on sugar, we don&#39;t want diabetes!&quot;) } else { console.log (&quot;Amazing, you created a healthy lunch!!!&quot;) } } } . Writing Nested Code Activity . Write a program that fits these conditions using nested conditionals: If a person has at least 8 hours, they are experienced | If a person is experienced their salary is 90k, if they have ten hours or above their salary 150k | If a person is inexperienced their salary is always 50k | print the salary of the person at the end and whether they are experienced or not | . | var hrs = 10 var salary = &quot;&quot; var experienced = true if (hrs &gt;= 10) { salary = &quot;150k&quot; } else if (hrs &gt;= 8) { salary = &quot;90k&quot; } else { salary = &quot;50k&quot; experienced = false } console.log(&quot;This person has... n&quot; + &quot;Salary: &quot; + salary + &quot; n&quot; + &quot;Experience: &quot; + experienced) . This person has... Salary: 150k Experience: true . Hacks Assignments: . Conditionals: . Write a program that fits these conditions using nested conditionals: If the product is expired, print &quot;this product is no good&quot; | If the cost is above 50 dollars, and the product isn&#39;t expired, print &quot;this product is too expensive&quot; | If the cost is more than 25 dollars but under 50, and the product isn&#39;t expired, print &quot;this is a regular product&quot; | If the cost is under 25 dollars, print &quot;this is a cheap product&quot; | . | . product = {&quot;expired&quot;:false, &quot;cost&quot;:10} if (product[&quot;expired&quot;] == true) { console.log(&quot;This product is no good!!!!!!!&quot;) } else { if (product[&quot;cost&quot;] &gt; 50) { console.log(&quot;THis product is too expensive!11111&quot;) } else if (product[&quot;cost&quot;] &gt; 25) { console.log(&quot;this product normal&quot;) } else { console.log(&quot;cheap&quot;) } } . cheap . Boolean/Conditionals: . Create a multiple choice quiz that ... uses Boolean expressions | uses Logical operators | uses Conditional statements | prompts quiz-taker with multiple options (only one can be right) | has at least 3 questions | . | Points will be awarded for creativity, intricacy, and how well Boolean/Binary concepts have been intertwined | . qAndA = { &quot;question&quot; : [&quot;What language was this quiz coded in?&quot;, &quot;sus amognsu&quot;, &quot;what do you think of kanye&quot;], &quot;answers&quot; : [[&quot;python&quot;,&quot;english&quot;,&quot;java&quot;,&quot;javascript&quot;], [&quot;among us&quot;,&quot;sussy baka&quot;,&quot;among among&quot;,&quot;agmosnus&quot;], [&quot;great&quot;,&quot;ok&quot;,&quot;meh&quot;,&quot;no good&quot;]], &quot;correct&quot; : [&quot;a&quot;, &quot;b&quot;, &quot;d&quot;], &quot;letters&quot; : [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;] } totalQs = len(qAndA[&quot;question&quot;]) i = 0 score = 0 while i != totalQs: qAnswered = False currentQ = qAndA[&quot;question&quot;][i] print(currentQ + &quot; n&quot;) n = 0 while n &lt; 4: print(str(qAndA[&quot;letters&quot;][n]) + &quot;: &quot; + str(qAndA[&quot;answers&quot;][i][n])) n += 1 ans = input(currentQ) ans.lower() print(&quot;&quot;) while qAnswered == False: if ans == &quot;a&quot; or &quot;b&quot; or &quot;c&quot; or &quot;d&quot;: if ans == qAndA[&quot;correct&quot;][i]: score += 1 print(&quot;correct!11111&quot;) else: print(&quot;NO&quot;) qAnswered = True else: print(&quot;Enter a valid letter option (a, b, c, or d)&quot;) print(&quot;you score is: &quot; + str(score) + &quot; n&quot;) i += 1 . What language was this quiz coded in? a: python b: english c: java d: javascript correct!11111 you score is: 1 sus amognsu a: among us b: sussy baka c: among among d: agmosnus correct!11111 you score is: 2 what do you think of kanye a: great b: ok c: meh d: no good correct!11111 you score is: 3 .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/booleans",
            "relUrl": "/jupyter/booleans",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 3 Sections 14 and 15",
            "content": "&lt;/p&gt; PROCEDURE Dice(n) sum ← 0 REPEAT UNTIL n = 0 sum ← sum + RANDOM(1, 6) n ← n - 1 RETURN sum . &lt;/span&gt; . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; import random def Dice(n): # Where “n” is the number of die rolled sum = 0 while n &gt;= 0: sum += random.randint(1, 6) n -= 1 return sum Dice(13) . &lt;/div&gt; .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/markdown/student_teaching/2022/11/30/randomvalues.html",
            "relUrl": "/jupyter/markdown/student_teaching/2022/11/30/randomvalues.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Robotics Scouting??!?!?!?",
            "content": "Enter team ID (be careful to enter a valid team id, code is not checking lmao) . | . Team Number Team Name School Location Sponsors Rookie Past Awards Regionals Past Rankings .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/11/29/Robotics_Scouting.html",
            "relUrl": "/markdown/2022/11/29/Robotics_Scouting.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Week 14 - Variables, Assignments, and Data Abstractions Hacks",
            "content": "def qAndRsp(prompt): print(&quot;Question: &quot; + prompt) msg = input(prompt) return msg questionsList = [ [&quot;What language was this coded in?&quot;, &quot;python&quot;], [&quot;Sussy&quot;, &quot;among us&quot;], [&quot;What letter comes after A in the alphabet?&quot;,&quot;b&quot;], [&quot;What is 3+4?&quot;,&quot;7&quot;], [&quot;What is my least favorite class?&quot;,&quot;csp&quot;], [&quot;aAAAAAaaaaaAaAaaAaaAAaaAAaaAaAaaa&quot;, &quot;&quot;], [&quot;I quit&quot;, &quot;ok&quot;], ] correct = 0 questions = len(questionsList) for QAPair in questionsList: question = QAPair[0] answer = QAPair[1] rsp = qAndRsp(question) rspLower = rsp.lower() if rspLower == answer: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(&quot;&quot;) quotient=correct/questions percentage=round((quotient * 100), 2) print(&quot;You scored &quot; + str(correct) +&quot;/&quot; + str(questions)) print(&quot;That&#39;s&quot;, percentage,&quot;%!&quot;) percentList = [ [100,&quot;Perfect!&quot;], [90,&quot;Great!&quot;], [80,&quot;Nice!&quot;], [70,&quot;Could be better&quot;], [60,&quot;Needs improvement&quot;], ] for numbersPair in percentList: numbers = numbersPair[0] note = numbersPair[1] if numbers + 10 &gt; percentage &gt;= numbers: print(note) if 60 &gt; percentage &gt; 0: print(&quot;Skill issue?&quot;) elif percentage ==0: print(&quot;Very cool!!&quot;) . Question: What language was this coded in? python is correct! Question: Sussy AMOGUS is incorrect! Question: What letter comes after A in the alphabet? b is correct! Question: What is 3+4? 7 is correct! Question: What is my least favorite class? CSP is correct! Question: aAAAAAaaaaaAaAaaAaaAAaaAAaaAaAaaa AAAHHHH is incorrect! Question: I quit me too is incorrect! You scored 4/7 That&#39;s 57.14 %! Skill issue? .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/vardata",
            "relUrl": "/jupyter/vardata",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true + then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20 + 60 + 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome + since every time the value assigned to a variable is changed + it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables + especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6 + which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6 + which is 16 # output: num1 = 10 + num2 = 16 + num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14 + num2 = 8 + num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot + not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 #var = var1 + 5 #var2 = var1 - var3 #var1 = var2 #var3 = (var1 + var2) / 2 #var2 = 6 print(var1) print(var2) print(var3) . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 #its 20.4 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 #0 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueC) #17 . 17 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) #straightbrownshort . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers + letters + spaces + special symbols + etc. . A string is a collection of characters. What is a character as character can be anything from numbers + letters + spaces + special symbols + etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot; + &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot; + 2 + 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot; +&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1 + 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[0:7] yoda = Adjective2 + &quot; &quot; + Adjective + &quot; &quot; + abrev + &quot; &quot; +Verb + &quot;.&quot; print(yoda) . Very handsome Mr.Mort is. . Problem 2 . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len2 = len(cookie2) * 45 vote1 = str(cookie) + &quot; votes: &quot; + str(len2) vote2 = str(cookie2) + &quot; votes: &quot; + str(len1) votes = vote1 &quot; n&quot; + vote2 print(votes) . choclate votes: 225 rasin votes: 4.0 .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/mathexpressions",
            "relUrl": "/jupyter/mathexpressions",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Presentation Notes",
            "content": ". Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . Variables, Assignments, and Data Abstraction . Keep variable names simple but not too vague | Spaces and dashes in variable names are improper syntax | Variable types: Integers are numbers | Text/strings are words (not always) | Booleans are data that determine true/false | . | Lists can be stored in variables for easy access | Assignment operator allows programs to change values of a variable = : Sets equal | += : Adds right to left | -= : Subtracts right from left | *= : Multiplies right by left | /= : Divides left by right | . | Data abstraction represents data in a useful form Variables and lists | . | List = Ordered sequence of elements Related items can be treated as a single value | Can keep adding elements | Store more elements in a single variable | . | Element = Individual value in a list with a unique index | Index = Way to reference the elements in a list or string using natural numbers (you can do negative in Python tho??) AP Exam has it start at 1 | . | Python allows you to append lists to lists but on the AP Exam it just replaces the other list | Hacks | . Mathematical Expressions and Strings . Sequences are the order that algorithms do things | Selection chooses different outcomes from a decision | Iteration repeats code until true | Remainder represented by MOD (% in python) | Follows same order of operations as regular mathematics | Numerical values can be stored in variables, as well as other variables, the results of mathematical operations, and results of procedure calls | Strings can be anything | Concatenation adds two strings (like just + in python) | substring(string, starting index, ending index) substring(“thisisabruhmoment”, 8, 11) returns “bruh” (CollegeBoard index starts at 1) | . | Hacks | . Boolean . If and else and else if | returns only 2 possible outputs, true or false | includes &lt;, &gt;, =, !=, etc. | Hacks | . Lists &amp; Iteration . Iteration is the repetition of a process Loops (for, while, recursive) | . | Matrices are complicated lol | Hacks | . Algorithms . Algorithms are processes through code | Conditions are boolean expressions that output true or false | Binary search finds the index of specific values in a list by splitting in half the max(?) | Hacks | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/11/28/notes.html",
            "relUrl": "/markdown/2022/11/28/notes.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Week 13 Review Ticket",
            "content": "Week 13 Review Ticket . Binary Hacks | Show working kernels | Show working docker | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/11/18/Week_13_Hacks-copy.html",
            "relUrl": "/markdown/2022/11/18/Week_13_Hacks-copy.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Week 11 Review Ticket",
            "content": "Week 11 Review Ticket . . Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . Night at the Museum I only visited other periods of CSP and CSA (and Psych for other reasons), but I saw some pretty cool stuff, however I only took pictures before it started, of people&#39;s VSCode (because I thought it would be funny), and only took photos of two groups because I kind of forgot. Here is a picture of a phone taking a picture of someone&#39;s Dictionary website using an API. Here is a picture of a crime data website. | CollegeBoard Multiple Choice Questions Score: 45/50 Corrections: The correct answer is C because honestly I read the question too fast and flipped the &quot;&lt;&quot; If x is less than 0 (negative) then y is defined and the procedure will return &quot;True&quot;, otherwise it returns nothing. The answer is A because the application *would* need Brandon and Cynthia&#39;s usernames to find their dietary restrictions, but not of everyone on their contacts list. I don&#39;t really get this one. The answer isn&#39;t A because routing on the internet is usually dynamic, meaning that the order is not specified in advance. On this one I knew both A and D would work, but I didn&#39;t realize I was supposed to select multiple answers. The reason I went with D, however, is because it is what I would have done. | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/11/04/NatM_Blog.html",
            "relUrl": "/markdown/2022/11/04/NatM_Blog.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Who's That Pokémon?",
            "content": ". Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . . Who&#39;s That Pokémon? . HOW TO PLAY . Press start | Choose generation of Pokémon (Gen 8 not yet fully supported by PokéAPI) | Submit Pokémon name with the button or Enter | Press Next or Enter | Repeat until all Pokémon are correct or until 3 incorrect answers | | . | . | . CLICK TO START | . A better version of the game (with global stats) can be found here . .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/10/20/whothatpokemon.html",
            "relUrl": "/markdown/2022/10/20/whothatpokemon.html",
            "date": " • Oct 20, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "API Table",
            "content": "API Table - Pokémon . . Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . ID Pokémon Picture .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/10/13/API_Table.html",
            "relUrl": "/markdown/2022/10/13/API_Table.html",
            "date": " • Oct 13, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Week 7 Review Ticket",
            "content": "Week 7 Review Ticket . . Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . API: YouTube Downloader | Final Project Planning | Code Corrections | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/10/09/Week_7_Review_Ticket.html",
            "relUrl": "/markdown/2022/10/09/Week_7_Review_Ticket.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Week 7 - API Testing",
            "content": "I will add frontend to make this useable on the blog for everyone rather than just in this notebook later. . import json, requests, getpass, sys class color: BOLD = &#39; 033[91m&#39; UNDERLINE = &#39; 033[91m&#39; END = &#39; 033[0m&#39; # This doesn&#39;t really work except make things red, don&#39;t know why print(color.BOLD + &quot;YouTube Video Downloader with APIs: n&quot; + color.END) apiFound = False while apiFound == False: print(color.UNDERLINE + &quot;Enter a valid YouTube Video URL or ID:&quot; + color.END) videoURL = input(&quot;Enter a valid YouTube Video URL or ID:&quot;) videoID = videoURL[-11:] print(getpass.getuser() + &quot;: &quot; + videoURL) url = &quot;https://ytstream-download-youtube-videos.p.rapidapi.com/dl&quot; querystring = {&quot;id&quot;:videoID} headers = { &quot;X-RapidAPI-Key&quot;: &quot;e51c67fa22mshec43200baacf5b3p148027jsn10e3e84c629e&quot;, &quot;X-RapidAPI-Host&quot;: &quot;ytstream-download-youtube-videos.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) json = response.json() if json[&#39;status&#39;] == &quot;fail&quot;: print(color.BOLD + &quot; nYou have inputted an invalid YouTube ID, please try again. n&quot; + color.END) else: apiFound = True formatList = json.get(&#39;formats&#39;) qualityFound = False while qualityFound == False: print(color.UNDERLINE + &quot; nAvailable qualities:&quot; + color.END) i = 2 while i &gt;= 0: print(formatList[i][&#39;qualityLabel&#39;]) i -= 1 print(&quot;Note: 144p is &quot; + color.BOLD + &quot;AUDIO-ONLY&quot; + color.END) print(color.UNDERLINE + &quot; nEnter chosen quality (from the list):&quot; + color.END) chosenQuality = input(&quot;Enter chosen quality (from the list)&quot;) print(getpass.getuser() + &quot;: &quot; + chosenQuality) chosenQuality.lower() downloadURL = 0 if chosenQuality == formatList[0][&#39;qualityLabel&#39;]: downloadURL = 0 qualityFound = True elif chosenQuality == formatList[1][&#39;qualityLabel&#39;]: downloadURL = 1 qualityFound = True elif chosenQuality == formatList[2][&#39;qualityLabel&#39;]: downloadURL = 2 qualityFound = True else: print(color.BOLD + &quot; nThe selected resolution is not available, please try again.&quot; + color.END) print(color.UNDERLINE + &quot; nDownload link: n&quot; +formatList[downloadURL][&#39;url&#39;] + color.END + &quot; n nTo download, click on the three dots in the bottom-right then press download.&quot;) . YouTube Video Downloader with APIs: Enter a valid YouTube Video URL or ID: Aiden: https://www.youtube.com/watch?v=TApmI8YtYhc Available qualities: 144p 360p 720p Note: 144p is AUDIO-ONLY Enter chosen quality (from the list): Aiden: The selected resolution is not available, please try again. Available qualities: 144p 360p 720p Note: 144p is AUDIO-ONLY Enter chosen quality (from the list): Aiden: 720p Download link: https://rr5sn-4g5edns6.googlevideo.com/videoplayback?expire=1665633762&amp;ei=gjlHY9jRAZqy1wK45qGADQ&amp;ip=23.88.39.196&amp;id=o-AFKqeirNm7pBz-qtDw5uSZ_D3elyevEQf-n9Y6w3bR8Z&amp;itag=22&amp;source=youtube&amp;requiressl=yes&amp;mh=KX&amp;mm=31%2C29&amp;mn=sn-4g5edns6%2Csn-4g5lznez&amp;ms=au%2Crdu&amp;mv=m&amp;mvi=5&amp;pl=26&amp;initcwndbps=282500&amp;vprv=1&amp;svpuc=1&amp;mime=video%2Fmp4&amp;cnr=14&amp;ratebypass=yes&amp;dur=3.134&amp;lmt=1630135775777054&amp;mt=1665611831&amp;fvip=3&amp;fexp=24001373%2C24007246&amp;c=ANDROID&amp;txp=5311224&amp;sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cvprv%2Csvpuc%2Cmime%2Ccnr%2Cratebypass%2Cdur%2Clmt&amp;sig=AOq0QJ8wRQIgYCqH0FduYsIW4JcOIHh5xZ2r0KWTxifgEXKIWCSoUF4CIQDTRUhB15r0QljszhXWoY7-EcvgO8ejS72TmIvw8_dPkA%3D%3D&amp;lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&amp;lsig=AG3C_xAwRAIgKFiwJ7fK4qGudS8wcyOjcGxbSR1z4qxmBuROzt83OfgCIBc-Yn0sbcrF0uzKoLLreDgflqrsmbIQsu9U6_RgDMvh To download, click on the three dots in the bottom-right then press download. .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/markdown/2022/10/05/API_Test.html",
            "relUrl": "/jupyter/markdown/2022/10/05/API_Test.html",
            "date": " • Oct 5, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Making TETRIS",
            "content": "Planning . Use Javascript setInterval() for block gravity Potentially make the interval a variable that increases over time or with difficulty settings | . | . | Block saving sounds hard, do that last maybe | A list of each block type? | . Day #1 (10/4/22) . // html zone for later . var gameRunning = 0; //variables for easy difficulty changes, settings options implemented later? var time = 500; // change for initial speed in ms var acceleration = 10000; // how long it takes before increasing speed in ms function timer() { time -= 50 }; function gravity() { //gravity code poggers }; function gameStart() { // do an onclick event on html button gameRunning = 1 //change screen?}; while (gameRunning === 1) { setInterval(timer, acceleration) // every ___ milliseconds the speed will increase if (time &gt;= 10) { setInterval(gravity, time) } else { setInterval(gravity, 10) // speed caps at 10ms } }; while (gameRunning === 0) { // score screen or somethin } //ok like the timer works but it doesnt stop because i don&#39;t have a stop thing yet . 450 400 350 300 250 200 150 100 50 0 -50 -100 -150 -200 -250 -300 -350 -400 -450 -500 -550 -600 -650 -700 -750 -800 -850 -900 -950 -1000 -1050 -1100 -1150 -1200 -1250 -1300 -1350 -1400 -1450 -1500 -1550 -1600 -1650 -1700 -1750 -1800 -1850 -1900 -1950 -2000 -2050 -2100 -2150 -2200 -2250 -2300 -2350 -2400 -2450 -2500 -2550 -2600 -2650 -2700 -2750 -2800 -2850 -2900 -2950 -3000 -3050 -3100 -3150 -3200 -3250 -3300 -3350 -3400 -3450 -3500 -3550 -3600 -3650 -3700 -3750 -3800 -3850 -3900 -3950 -4000 -4050 -4100 -4150 -4200 -4250 -4300 -4350 -4400 -4450 -4500 -4550 -4600 -4650 -4700 -4750 -4800 -4850 -4900 -4950 -5000 -5050 -5100 -5150 -5200 -5250 -5300 -5350 -5400 -5450 -5500 -5550 -5600 -5650 -5700 -5750 -5800 -5850 -5900 -5950 -6000 -6050 -6100 -6150 -6200 -6250 -6300 -6350 -6400 -6450 -6500 -6550 -6600 -6650 -6700 -6750 -6800 -6850 -6900 -6950 -7000 -7050 -7100 -7150 -7200 -7250 -7300 -7350 -7400 -7450 -7500 -7550 -7600 -7650 -7700 -7750 -7800 -7850 -7900 -7950 -8000 -8050 -8100 -8150 -8200 -8250 -8300 -8350 -8400 -8450 -8500 -8550 -8600 -8650 -8700 -8750 -8800 -8850 -8900 -8950 -9000 -9050 -9100 -9150 -9200 -9250 -9300 -9350 -9400 -9450 -9500 -9550 -9600 -9650 -9700 -9750 -9800 -9850 -9900 -9950 -10000 -10050 -10100 -10150 -10200 -10250 -10300 -10350 -10400 -10450 -10500 -10550 -10600 -10650 -10700 -10750 -10800 -10850 -10900 -10950 -11000 -11050 -11100 -11150 -11200 -11250 -11300 -11350 -11400 -11450 -11500 -11550 -11600 -11650 -11700 -11750 -11800 -11850 -11900 -11950 -12000 -12050 -12100 -12150 -12200 -12250 -12300 -12350 -12400 -12450 -12500 -12550 -12600 -12650 -12700 -12750 -12800 -12850 -12900 -12950 -13000 -13050 -13100 -13150 -13200 -13250 -13300 -13350 -13400 -13450 -13500 -13550 -13600 -13650 -13700 -13750 -13800 -13850 -13900 -13950 -14000 -14050 -14100 -14150 -14200 -14250 -14300 -14350 -14400 -14450 -14500 -14550 -14600 -14650 -14700 -14750 -14800 -14850 -14900 -14950 -15000 -15050 -15100 -15150 -15200 -15250 -15300 -15350 -15400 -15450 -15500 -15550 -15600 -15650 -15700 -15750 -15800 -15850 -15900 -15950 -16000 -16050 -16100 -16150 -16200 -16250 -16300 -16350 -16400 -16450 -16500 -16550 -16600 -16650 -16700 -16750 -16800 -16850 -16900 -16950 -17000 -17050 -17100 -17150 -17200 -17250 -17300 -17350 -17400 -17450 -17500 -17550 -17600 -17650 -17700 -17750 -17800 -17850 -17900 -17950 -18000 -18050 -18100 -18150 -18200 -18250 -18300 -18350 -18400 -18450 -18500 -18550 -18600 -18650 -18700 -18750 -18800 -18850 -18900 -18950 -19000 -19050 -19100 -19150 -19200 -19250 -19300 -19350 -19400 -19450 -19500 -19550 -19600 -19650 -19700 -19750 -19800 -19850 -19900 -19950 -20000 -20050 -20100 -20150 -20200 -20250 -20300 -20350 -20400 -20450 -20500 -20550 -20600 -20650 -20700 -20750 -20800 -20850 -20900 -20950 -21000 -21050 -21100 -21150 -21200 -21250 -21300 -21350 -21400 -21450 -21500 -21550 -21600 -21650 -21700 -21750 -21800 -21850 -21900 -21950 -22000 -22050 -22100 -22150 -22200 -22250 -22300 -22350 -22400 -22450 -22500 -22550 -22600 -22650 -22700 -22750 -22800 -22850 -22900 -22950 -23000 -23050 -23100 -23150 -23200 -23250 -23300 -23350 -23400 -23450 -23500 -23550 -23600 -23650 -23700 -23750 -23800 -23850 -23900 -23950 -24000 -24050 -24100 -24150 -24200 -24250 -24300 -24350 -24400 -24450 -24500 -24550 -24600 -24650 -24700 -24750 -24800 -24850 -24900 -24950 -25000 -25050 -25100 -25150 -25200 -25250 -25300 -25350 -25400 -25450 -25500 -25550 -25600 -25650 -25700 -25750 -25800 -25850 -25900 -25950 -26000 -26050 -26100 -26150 -26200 -26250 -26300 -26350 -26400 -26450 -26500 -26550 -26600 -26650 -26700 -26750 -26800 -26850 -26900 -26950 -27000 -27050 -27100 -27150 -27200 -27250 -27300 -27350 -27400 -27450 -27500 -27550 -27600 -27650 -27700 -27750 -27800 -27850 -27900 -27950 -28000 -28050 -28100 -28150 -28200 -28250 -28300 -28350 -28400 -28450 -28500 -28550 -28600 -28650 -28700 -28750 -28800 -28850 -28900 -28950 -29000 -29050 -29100 -29150 -29200 -29250 -29300 -29350 -29400 -29450 -29500 -29550 -29600 -29650 -29700 -29750 -29800 -29850 -29900 -29950 -30000 -30050 -30100 -30150 -30200 -30250 -30300 -30350 -30400 -30450 -30500 -30550 -30600 -30650 -30700 -30750 -30800 -30850 -30900 -30950 -31000 -31050 -31100 -31150 -31200 -31250 -31300 -31350 -31400 -31450 -31500 -31550 -31600 -31650 -31700 -31750 -31800 -31850 -31900 -31950 -32000 -32050 -32100 -32150 -32200 -32250 -32300 -32350 -32400 -32450 -32500 -32550 -32600 -32650 -32700 -32750 -32800 -32850 -32900 -32950 -33000 -33050 -33100 -33150 -33200 -33250 -33300 -33350 -33400 -33450 -33500 -33550 -33600 -33650 -33700 -33750 -33800 -33850 -33900 -33950 -34000 -34050 -34100 -34150 -34200 -34250 -34300 -34350 -34400 -34450 -34500 -34550 -34600 -34650 -34700 -34750 -34800 -34850 -34900 -34950 -35000 -35050 -35100 -35150 -35200 -35250 -35300 -35350 -35400 -35450 -35500 -35550 -35600 -35650 -35700 -35750 -35800 -35850 -35900 -35950 -36000 -36050 -36100 -36150 -36200 -36250 -36300 -36350 -36400 -36450 -36500 -36550 -36600 -36650 -36700 -36750 -36800 -36850 -36900 -36950 -37000 -37050 -37100 -37150 -37200 -37250 -37300 -37350 -37400 . Day 2 (10/20/22) . After looking online at some examples of TETRIS with js, I have noticed that I would need to write a minimum of like 1,500 lines of code so I have given up on this and am now moving to do Who&#39;s That Pokemon. .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/markdown/2022/09/30/tetris-testing.html",
            "relUrl": "/jupyter/markdown/2022/09/30/tetris-testing.html",
            "date": " • Sep 30, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Week 6 - Deployment",
            "content": "Week 6 Review Ticket . . Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . CollegeBoard MCQs (1.1, 1.2, 1.3) I got a point off on 1.2 because I forgot like basic Integrated math (5*3 vs 5^3) | . AWS Deployment (curl output) (webapp) ubuntu@ip-172-31-28-68:~/Flask_Swag$ curl http://localhost:8086&lt;br/&gt; &lt;!-- Custom file for standardizing Project Data&lt;br/&gt; This HTML is setup as as a Jinja2 layout, coders use layouts for:&lt;br/&gt; ... standardization of style&lt;br/&gt; ... setting expectations for data&lt;br/&gt; ... code reuse&lt;br/&gt; --&gt;&lt;br/&gt; &lt;!DOCTYPE HTML&gt;&lt;br/&gt; &lt;html lang=&quot;en&quot;&gt;&lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;head&gt;&lt;br/&gt; &lt;!-- Required meta tags --&gt;&lt;br/&gt; &lt;meta charset=&quot;utf-8&quot;&gt;&lt;br/&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;br/&gt; &lt;br/&gt; &lt;!-- JQuery CSS --&gt;&lt;br/&gt; &lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot; integrity=&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;br/&gt; &lt;!-- Bootstrap CSS --&gt;&lt;br/&gt; &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;br/&gt; &lt;br/&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css&quot;&gt;&lt;br/&gt; &lt;style&gt;&lt;br/&gt; .navbar {&lt;br/&gt; position: static;&lt;br/&gt; z-index: 9999;&lt;br/&gt; }&lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;/style&gt;&lt;br/&gt; &lt;br/&gt; &lt;title&gt;Nighthawk Coding | Home &lt;/title&gt;&lt;br/&gt; &lt;br/&gt; &lt;/head&gt;&lt;br/&gt; &lt;br/&gt; &lt;body&gt;&lt;br/&gt; &lt;!-- Navigation Bar from bootstrap&lt;br/&gt; This HTML is setup as a fragment allowing it to be &quot;included&quot; by other HTML files via Jinja2&lt;br/&gt; --&gt;&lt;br/&gt; &lt;nav class=&quot;navbar navbar-expand-lg navbar-light bg-light&quot;&gt;&lt;br/&gt; &lt;img src=&quot;/static/assets/ncs_logo.png&quot; width=&quot;50&quot; height=&quot;50&quot; class=&quot;d-inline-block align-center&quot; alt=&quot;&quot;&gt;&lt;br/&gt; &lt;a class=&quot;navbar-brand&quot; href=&quot;https://csp.nighthawkcodingsociety.com/&quot;&gt;Nighthawk Coding&lt;/a&gt;&lt;br/&gt; &lt;button class=&quot;navbar-toggler&quot; type=&quot;button&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbarNavAltMarkup&quot; aria-controls=&quot;navbarNavAltMarkup&quot; aria-expanded=&quot;false&quot; aria-label=&quot;Toggle navigation&quot;&gt;&lt;br/&gt; &lt;span class=&quot;navbar-toggler-icon&quot;&gt;&lt;/span&gt;&lt;br/&gt; &lt;/button&gt;&lt;br/&gt; &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;navbarNavAltMarkup&quot;&gt;&lt;br/&gt; &lt;div class=&quot;navbar-nav&quot;&gt;&lt;br/&gt; &lt;!-- url_for is a Jinja2 pre-processor that finds route from function name (def) --&gt;&lt;br/&gt; &lt;a class=&quot;nav-link&quot; href=/&gt;Home&lt;/a&gt;&lt;br/&gt; &lt;a class=&quot;nav-link&quot; href=/stub/&gt;Sign-Up&lt;/a&gt;&lt;br/&gt; &lt;/div&gt;&lt;br/&gt; &lt;/div&gt;&lt;br/&gt; &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;navbarNavDarkDropdown&quot;&gt;&lt;br/&gt; &lt;ul class=&quot;navbar-nav&quot;&gt;&lt;br/&gt; &lt;li class=&quot;nav-item dropdown&quot;&gt;&lt;br/&gt; &lt;a class=&quot;nav-link dropdown-toggle&quot; href=&quot;#&quot; id=&quot;navbarDarkDropdownMenuLink&quot; role=&quot;button&quot; data-bs-toggle=&quot;dropdown&quot; aria-expanded=&quot;false&quot;&gt;&lt;br/&gt; Blogs&lt;br/&gt; &lt;/a&gt;&lt;br/&gt; &lt;ul class=&quot;dropdown-menu dropdown-menu-dark&quot; aria-labelledby=&quot;navbarDarkDropdownMenuLink&quot;&gt;&lt;br/&gt; &lt;li&gt;&lt;a class=&quot;dropdown-item&quot; href=/projects/portfolio/&gt;Portfolio&lt;/a&gt;&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;a class=&quot;dropdown-item&quot; href=/projects/kangaroos/&gt;Kangaroos&lt;/a&gt;&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;a class=&quot;dropdown-item&quot; href=/projects/walruses/&gt;Dash&#39;s Blog&lt;/a&gt;&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;a class=&quot;dropdown-item&quot; href=/projects/aidensblog/&gt;Aiden&#39;s Blog&lt;/a&gt;&lt;/li&gt;&lt;br/&gt; &lt;/ul&gt;&lt;br/&gt; &lt;/li&gt;&lt;br/&gt; &lt;/ul&gt;&lt;br/&gt; &lt;/div&gt;&lt;br/&gt; &lt;/nav&gt;&lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;!-- Start of body content specific to page --&gt;&lt;br/&gt; &lt;html&gt;&lt;br/&gt; &lt;head&gt;&lt;br/&gt; &lt;style&gt;&lt;br/&gt; html,body { height:100%; }&lt;br/&gt; .mainDiv {&lt;br/&gt; text-align: center;&lt;br/&gt; padding: 30px;&lt;br/&gt; background-color: #4d4d4dbe;&lt;br/&gt; margin: auto;&lt;br/&gt; border-radius:25px;&lt;br/&gt; width:50%;&lt;br/&gt; height:80%;&lt;br/&gt; }&lt;br/&gt; h2.titleText {&lt;br/&gt; font-family: &quot;Courier New&quot;;&lt;br/&gt; color:rgb(0, 255, 170);&lt;br/&gt; }&lt;br/&gt; .button {&lt;br/&gt; width: 100%;&lt;br/&gt; height: 15%;&lt;br/&gt; background-color: rgba(255, 255, 255, 0.9);&lt;br/&gt; border: 0px;&lt;br/&gt; border-radius:10px;&lt;br/&gt; }&lt;br/&gt; &lt;/style&gt;&lt;br/&gt; &lt;/head&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;div class=&quot;mainDiv&quot;&gt;&lt;br/&gt; &lt;body&gt;&lt;br/&gt; &lt;h1 style=&quot;color:rgb(0, 255, 170);text-align:center;text-align:center;font-family:&#39;Courier New&#39;&quot;&gt;title text&lt;/h1&gt; &lt;br/&gt; &lt;i style=&quot;color:rgb(212, 212, 212)&quot;&gt;this doesn&#39;t do anything yet&lt;/i&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;button class=&quot;button&quot;&gt;GAME TITLE 1&lt;/button&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;button class=&quot;button&quot;&gt;GAME TITLE 2&lt;/button&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;button class=&quot;button&quot;&gt;GAME TITLE 3&lt;/button&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;br&gt;&lt;br/&gt; &lt;button class=&quot;button&quot;&gt;GAME TITLE 4&lt;/button&gt;&lt;br/&gt; &lt;/body&gt;&lt;br/&gt; &lt;/div&gt;&lt;br/&gt; &lt;/html&gt;&lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;!-- Bootstrap 5.0 Bundle with Popper --&gt;&lt;br/&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;br/&gt; &lt;/body&gt;&lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;script src=&quot;/static/js/three.r119.min.js&quot;&gt;&lt;/script&gt;&lt;br/&gt; &lt;script src=&quot;/static/js/vanta.birds.min.js&quot;&gt;&lt;/script&gt;&lt;br/&gt; &lt;script&gt;&lt;br/&gt; VANTA.BIRDS({&lt;br/&gt; el: &quot;body&quot;,&lt;br/&gt; mouseControls: true,&lt;br/&gt; touchControls: true,&lt;br/&gt; gyroControls: false,&lt;br/&gt; minHeight: 200.00,&lt;br/&gt; minWidth: 200.00,&lt;br/&gt; scale: 1.00,&lt;br/&gt; scaleMobile: 1.00&lt;br/&gt; })&lt;br/&gt; &lt;/script&gt; . | &lt;/ul&gt; | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/26/Week_6_Review_Ticket.html",
            "relUrl": "/markdown/2022/09/26/Week_6_Review_Ticket.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Week 5 - UI Starters",
            "content": "Week 5 Review Ticket . . Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . Program Purpose Hacks | Submenu (above) | Java Testing (on the submenu) | Flask stuff | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/25/Week_5_Review_Ticket.html",
            "relUrl": "/markdown/2022/09/25/Week_5_Review_Ticket.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Submenu Test",
            "content": ". Home About Me Time Box Funny picture of a bird Java Testing Java Table API . .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/25/Submenu_Test.html",
            "relUrl": "/markdown/2022/09/25/Submenu_Test.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Week 5 - Program Purpose Hacks",
            "content": ". Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . Questions: . Do we have final project ideas for a PBL Web Project? We are thinking of making a website that contains multiple different games, something like coolmathgames.com | Each person will be making their own game, and we will assist each other along the way | . | Are we considering a project that is best for our educational purpose? In working primarily by ourselves on our own games, we will be more susceptible to running into problems, thus allowing for more learning opportunities | . | Is the project going to hold team members interest for 8 weeks? We like games, we like to code -&gt; coding + games = mega cool! | . | Does the project have potential for someone to use it beyond the 8 weeks? ie Customer or Sponsor needed? People don&#39;t really need games but it might be fun to revisit now and then | . | Does the project have potential to be used for Create Performance Task submission? My game will be Tetris, which has potential for Create Performance Task submission as it uses data abstraction in the lists of possible tetricles | . | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/markdown/2022/09/23/Program_Purpose_Hacks.html",
            "relUrl": "/jupyter/markdown/2022/09/23/Program_Purpose_Hacks.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Week 5 - Java Testing",
            "content": ". Home About Me Time Box Funny picture of a bird Java Testing Java Table API . . console.log output . var bruh = &quot;cool coding&quot;; console.log(bruh); . cool coding . console.log as a Function . function print(output) { console.log(output) } print(bruh) print(&quot; &quot;) print(&quot;Can also be numbers:&quot;) print(100) . cool coding Can also be numbers: 100 . Getting Input Types . function printType(output) { console.log(&quot;This is a&quot;, typeof output+&quot;:&quot;, output); } print(&quot;You don&#39;t have to specify what type of value inputs are (string or int)&quot;) printType(&quot;Text&quot;); printType(bruh); // bruh = a string, therefore... printType(100); printType([1,2,3]); // object is generic for arrays (array = list) . You don&#39;t have to specify what type of value inputs are (string or int) This is a string: Text This is a string: cool coding This is a number: 100 This is a object: [ 1, 2, 3 ] . Coin Flipper . function coinFlip() { var flip = Math.random() if(flip &lt; &quot;0.5&quot;) { console.log(&quot;It&#39;s Heads!&quot;) } else if(flip &gt; &quot;0.5&quot;) { console.log(&quot;It&#39;s Tails!&quot;) } else { console.log(&quot;It landed on it&#39;s side!&quot;) // This is a 0.00000000000001% chance } } var coinCount = 10 while (coinCount&gt;0) { coinCount=(coinCount-1); coinFlip(); } . It&#39;s Heads! It&#39;s Tails! It&#39;s Tails! It&#39;s Tails! It&#39;s Heads! It&#39;s Heads! It&#39;s Tails! It&#39;s Tails! It&#39;s Heads! It&#39;s Tails! . Table with Java . function htmlsource() { // i could not figure out arrays return ( &quot;&lt;head&gt;&quot; + &quot;&lt;style&gt;&quot; + &quot;table, th, td, tr {&quot; + &quot;border: 1px solid #000000;&quot; + &quot;text-align: left;&quot; + &quot;padding: 8px;&quot; + &quot;}&quot; + &quot;&lt;/style&gt;&quot; + &quot;&lt;/head&gt;&quot; + &quot;&lt;table&gt;&quot; + &quot;&lt;tr&gt;&quot; + &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Name&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot; + &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Role&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot; + &quot;&lt;/tr&gt;&quot; + &quot;&lt;tr&gt;&quot; + &quot;&lt;td&gt;&quot; + &quot;Aiden&quot; + &quot;&lt;/td&gt;&quot; + &quot;&lt;td&gt;&quot; + &quot;Scrum Master&quot; + &quot;&lt;/td&gt;&quot; + &quot;&lt;/tr&gt;&quot; + &quot;&lt;tr&gt;&quot; + &quot;&lt;td&gt;&quot; + &quot;Dash&quot; + &quot;&lt;/td&gt;&quot; + &quot;&lt;td&gt;&quot; + &quot;Backend Developer&quot; + &quot;&lt;/td&gt;&quot; + &quot;&lt;/tr&gt;&quot; + &quot;&lt;tr&gt;&quot; + &quot;&lt;td&gt;&quot; + &quot;Sabine&quot; + &quot;&lt;/td&gt;&quot; + &quot;&lt;td&gt;&quot; + &quot;Frontend Developer&quot; + &quot;&lt;/td&gt;&quot; + &quot;&lt;/tr&gt;&quot; + &quot;&lt;tr&gt;&quot; + &quot;&lt;td&gt;&quot; + &quot;Aiden&quot; + &quot;&lt;/td&gt;&quot; + &quot;&lt;td&gt;&quot; + &quot;Backend Developer&quot; + &quot;&lt;/td&gt;&quot; + &quot;&lt;/tr&gt;&quot; + &quot;&lt;/table&gt;&quot; ) } $$.html(htmlsource()); . . NameRole . Aiden | Scrum Master | . Dash | Backend Developer | . Sabine | Frontend Developer | . Aiden | Backend Developer | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/markdown/2022/09/21/Java_Test.html",
            "relUrl": "/jupyter/markdown/2022/09/21/Java_Test.html",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Time Box",
            "content": ". Week Review Ticket Points . TRI 1 | . 0 | Week 0 Review Ticket | Tools and Setup | . 1 | Week 1 Review Ticket | Intro to Python, Bash, and Fastpages Frontend Development | . 2 | Week 2 Review Ticket | Dictionaries, Lists, Loops, and HTML Fragments | . 3 | Week 3 Review Ticket | AppLab Planning/Blogging, AppLab Creation, Plan for end of Tri project | . 4 | Week 4 Review Ticket | Python Web Server Project, Focus and Habits, Collaboration | . 5 | Week 5 Review Ticket | UI Starters, Agile, Javascript, Frontend | . 6 | Week 6 Review Ticket | Deployment, MCQs | . 7 | Week 7 Review Ticket | N/A | . TRI 2 | . 13 | Binary Hacks | Tools and Issues | . .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/18/timebox.html",
            "relUrl": "/markdown/2022/09/18/timebox.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Week 4 Video Presentation",
            "content": "",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/18/Week_4_Video.html",
            "relUrl": "/markdown/2022/09/18/Week_4_Video.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Week 4 Review Ticket - Python Web Server Project",
            "content": "Psychology and the Good Life Goals: (ACTUALLY DO THESE, EFFORT -&gt; HAPPINESS) Create something fun outside of class (SUPERSCRUMMERS) | Fun game for groups to play | More team building with the team | Make a substantial impact on the Robotics club | Offer help to classmates (particularly in psych) | 8-10hrs of sleep | . | Video Review | Collaboration My group is completely random as I hadn&#39;t known any of them aside from Dash | Not entirely sure about common interests | There is some variance in gender and a lot in culture. | Unsure of skill sets, but they are all interested in Computer Science | . | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/18/Week_4_Review_Ticket.html",
            "relUrl": "/markdown/2022/09/18/Week_4_Review_Ticket.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Sprint Backlog",
            "content": "Sprint Backlog: . Current Sprint: Python Web Server Project . Make video | Show local hosted servers | . Super Scrummers . I have actually no idea what we’re doing | . Other: . Create task planning | Figure out collaboration | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/12/Sprint_Backlog.html",
            "relUrl": "/markdown/2022/09/12/Sprint_Backlog.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Week 3 - Creative Development",
            "content": "Week 3 Review Ticket - Creative Development . AppLab Planning | AppLab Creation: The RNG Test(click for code) function Code() { hideElement(&quot;buttonContinue&quot;); hideElement(&quot;buttonRestart&quot;); hideElement(&quot;textTitle&quot;); var ans1 = &quot;nothing&quot;; var ans2 = &quot;nothing&quot;; var ans3 = &quot;nothing&quot;; var ans4 = &quot;nothing&quot;; var socialCredit = 0; var ans = 0; setText(&quot;textScore&quot;, &quot;Score: 0&quot;); function Correctans() { Hidebuttons(); setScreen(&quot;screenCorrect&quot;); showElement(&quot;buttonContinue&quot;); socialCredit += 15; Questions(); setText(&quot;textScore&quot;, &quot;Score: &quot;+socialCredit); } function Incorrectans() { Hidebuttons(); setScreen(&quot;screenIncorrect&quot;); showElement(&quot;buttonRestart&quot;); socialCredit = &quot;-30,000,000&quot;; onEvent(&quot;buttonRestart&quot;, &quot;click&quot;, function( ) { Code(); }); } function Questioncheck() { onEvent(&quot;buttonTL&quot;, &quot;click&quot;, function( ) { if (ans1 === &quot;correct&quot;) { Correctans(); } else { Incorrectans(); } }); onEvent(&quot;buttonTR&quot;, &quot;click&quot;, function( ) { if (ans2 === &quot;correct&quot;) { Correctans(); } else { Incorrectans(); } }); onEvent(&quot;buttonBL&quot;, &quot;click&quot;, function( ) { if (ans3 === &quot;correct&quot;) { Correctans(); } else { Incorrectans(); } }); onEvent(&quot;buttonBR&quot;, &quot;click&quot;, function( ) { if (ans4 === &quot;correct&quot;) { Correctans(); } else { Incorrectans(); } }); } function Randomans() { ans = randomNumber(0, 3); if (ans === 0) { ans1 = &quot;correct&quot;; ans2 = &quot;incorrect&quot;; ans3 = &quot;incorrect&quot;; ans4 = &quot;incorrect&quot;; } else if (ans === 1) { ans2 = &quot;correct&quot;; ans1 = &quot;incorrect&quot;; ans3 = &quot;incorrect&quot;; ans4 = &quot;incorrect&quot;; } else if (ans === 2) { ans3 = &quot;correct&quot;; ans1 = &quot;incorrect&quot;; ans2 = &quot;incorrect&quot;; ans4 = &quot;incorrect&quot;; } else { ans4 = &quot;correct&quot;; ans1 = &quot;incorrect&quot;; ans2 = &quot;incorrect&quot;; ans3 = &quot;incorrect&quot;; } } function Showbuttons() { setScreen(&quot;screenQuestions&quot;); showElement(&quot;buttonTL&quot;); showElement(&quot;buttonTR&quot;); showElement(&quot;buttonBL&quot;); showElement(&quot;buttonBR&quot;); showElement(&quot;boxQuestions&quot;); setPosition(&quot;buttonTL&quot;, 6, 275, 150, 70); setPosition(&quot;buttonTR&quot;, 164, 275, 150, 70); setPosition(&quot;buttonBL&quot;, 6, 353, 150, 70); setPosition(&quot;buttonBR&quot;, 164, 353, 150, 70); setPosition(&quot;boxQuestions&quot;, 30, 30, 260, 130); } function Showstart() { setScreen(&quot;screenStart&quot;); showElement(&quot;buttonStart&quot;); showElement(&quot;textTitle&quot;); } function Hidestart() { hideElement(&quot;buttonStart&quot;); hideElement(&quot;textTitle&quot;); } function Hidebuttons() { hideElement(&quot;buttonTL&quot;); hideElement(&quot;buttonTR&quot;); hideElement(&quot;buttonBL&quot;); hideElement(&quot;buttonBR&quot;); hideElement(&quot;boxQuestions&quot;); } function Questions() { if (socialCredit === 0) { setText(&quot;boxQuestions&quot;, &quot;Heads or Tails?&quot;); setText(&quot;buttonTL&quot;, &quot;Heads&quot;); setText(&quot;buttonTR&quot;, &quot;Tails&quot;); setText(&quot;buttonBL&quot;, &quot;Both&quot;); setText(&quot;buttonBR&quot;, &quot;Neither&quot;); var x = randomNumber(0, 1); if (x === 0) { ans1 = &quot;correct&quot;; } else if (x === 1) { ans2 = &quot;correct&quot;; } Questioncheck(); } else if (socialCredit === 15) { Randomans(); onEvent(&quot;buttonContinue&quot;, &quot;click&quot;, function() { hideElement(&quot;buttonContinue&quot;); Showbuttons(); setText(&quot;boxQuestions&quot;, &quot;Pick a number 1 - 4&quot;); setText(&quot;buttonTL&quot;, &quot;1&quot;); setText(&quot;buttonTR&quot;, &quot;2&quot;); setText(&quot;buttonBL&quot;, &quot;3&quot;); setText(&quot;buttonBR&quot;, &quot;4&quot;); }); } else if (socialCredit === 30) { Randomans(); onEvent(&quot;buttonContinue&quot;, &quot;click&quot;, function() { hideElement(&quot;buttonContinue&quot;); Showbuttons(); setText(&quot;boxQuestions&quot;, &quot;Which is correct?&quot;); setText(&quot;buttonTL&quot;, &quot;This one&quot;); setText(&quot;buttonTR&quot;, &quot;This one&quot;); setText(&quot;buttonBL&quot;, &quot;This one&quot;); setText(&quot;buttonBR&quot;, &quot;This one&quot;); }); } else { setScreen(&quot;screenVicroy&quot;); } } Showstart(); Hidebuttons(); onEvent(&quot;buttonStart&quot;, &quot;click&quot;, function( ) { Showbuttons(); Hidestart(); Questions(); }); } Code(); | Create Task Planning | Sprint backlog | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/10/Week_3_Review_Ticket.html",
            "relUrl": "/markdown/2022/09/10/Week_3_Review_Ticket.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Week 3 - Create Task Planning",
            "content": "Requirements: . Code Analysis: (4.A) Clearly state program&#39;s purpose, functionality, inputs, and outputs (written response) | Video showing program functioning (CAN NOT BE SCREENSHOTS) Input | Program functionality | Output | . | . | Data Abstraction: (3.B) Two segments: Data storage (list) | Stored data being used as part of fulfilling the program&#39;s purpose | . | Identify the name of the list | Describe the data within the list and how it relates to the program | . | Managing Complexity: (3.C) Program code segment that uses a list to simplify otherwise needlessly complex code (like the python quiz for loop) | Explain how the list simplifies the code, and how to code it would be coded differently without the list (written) | . | Procedural Abstraction: (3.B) Use abstraction to simplify programs A procedure with at least one parameter that affects the functionality of the procedure | Show where the procedure is being called | . | Describe the function of the procedure and how it simplifies the program | . | Algorithm Implementation: (2.B) An algorithm including... Sequencing | Selection | Iteration | . | Explain the steps of the algorithm with great detail | . | Testing: (4.C) Describe two calls to the procedure. Each call must pass a different argument that cause a different segment of code in the algorithm to execute. | Describe the condition being tested by each call to the procedure. | Identify the result of each call. | . | . Collaboration Rules: . 2 students working on the same program Pair programming | Dividing a complex program into different parts | . | Giving feedback | Providing debugging assistance | Citing code from a peer &quot;A collaborative peer&quot; to protect anonymity | . | . Planning: TETRIS . Concern: I have started this with javascript for the flask website but is it possible to use python instead for flask? | Requirements: Purpose: To entertain? idk | Functionality: | List: different shapes and colors, use a randomizer to pull from lists | Input: user key inputs: arrow keys, spacebar | Procedure: shape-selection procedure that randomizes the shape and then the color. | Output: blocks on screen and stuff | Algorithm: To check for the positions of each block and if each row is filled | . | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/markdown/2022/09/10/Create_Task_Planning.html",
            "relUrl": "/jupyter/markdown/2022/09/10/Create_Task_Planning.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Week 3 - AppLab Planning",
            "content": "AppLab Planning - RNG Test . Plans: Russian roulette? | Coin flip? | A “quiz” that uses random functions to randomize the correct answer | . | Progress: Tried to make a list for the questions but decided not to because I’m not that familiar with Java. | Made basic title and question screens, and a “Start” button to switch from one to the other. Made a 50/50 question for heads or tails, with two other answers that are always wrong. | Added questions and started to work on an answer randomization system that assigns a number from 0-3 to the variable “x”, and the correct answer would correspond to one of the 4 possible values for x. | Implemented the questions to the screen using setScreen commands and made a sort of recursive loop for setting the questions and verifying the answer. Also added victory and failure screens. | Added a score tracker (social credit) at the bottom of the screen that increases by 15 for each correct answer. The questions use an “if” function to check the value of the score, and sets the text to the proper question based on it. | | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/10/AppLab_Planning.html",
            "relUrl": "/markdown/2022/09/10/AppLab_Planning.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Loops, Dictionaries, and Lists",
            "content": "For Loop Test . This algorithm loops the given block of code for a known number of cycles. In this case it is twice because we have appended two dictionaries to the list. . InfoDb = [] # Data structure with keys and values # Append to list a Dictionary of key/values related to a person and their hobbies InfoDb.append({ &quot;FirstName&quot;: &quot;Aiden&quot;, &quot;LastName&quot;: &quot;Huynh&quot;, &quot;DOB&quot;: &quot;May 12&quot;, &quot;Residence&quot;: &quot;Escondido&quot;, &quot;Email&quot;: &quot;ah5993909@gmail.com&quot;, &quot;Hobbies&quot;: [&quot;Gaming&quot;, &quot;Video Editing&quot;] }) # Append a 2nd dictionary InfoDb.append({ &quot;FirstName&quot;: &quot;Avinh&quot;, &quot;LastName&quot;: &quot;Huynh&quot;, &quot;DOB&quot;: &quot;December 27&quot;, &quot;Residence&quot;: &quot;Escondido&quot;, &quot;Email&quot;: &quot;avinhahuynh@gmail.com&quot;, &quot;Hobbies&quot;: [&quot;Gaming&quot;, &quot;Streaming&quot;] }) # Prints all of the dictionary values def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # comma adds space between two values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t adds an indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot;, end=&quot;&quot;) print(&quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) print() # Loop algorithm def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Aiden Huynh Residence: Escondido Birth Day: May 12 Hobbies: Gaming, Video Editing Avinh Huynh Residence: Escondido Birth Day: December 27 Hobbies: Gaming, Streaming . While Loop Test . This algorithm only loops while a certain condition is met. In this case, it will only loop while the variable &quot;i&quot; is less than the number of items in the list given by the len command. The way we make this function is by adding one to &quot;i&quot; at the end of each loop, making it increase by one for each cycle until eventually becoming equal to the number of items in the list, thus ending the loop. . InfoDb = [] # Data structure with keys and values # Append to list a Dictionary of key/values related to a person and their hobbies InfoDb.append({ &quot;FirstName&quot;: &quot;Aiden&quot;, &quot;LastName&quot;: &quot;Huynh&quot;, &quot;DOB&quot;: &quot;May 12&quot;, &quot;Residence&quot;: &quot;Escondido&quot;, &quot;Email&quot;: &quot;ah5993909@gmail.com&quot;, &quot;Hobbies&quot;: [&quot;Gaming&quot;, &quot;Video Editing&quot;] }) # Append a 2nd dictionary InfoDb.append({ &quot;FirstName&quot;: &quot;Avinh&quot;, &quot;LastName&quot;: &quot;Huynh&quot;, &quot;DOB&quot;: &quot;December 27&quot;, &quot;Residence&quot;: &quot;Escondido&quot;, &quot;Email&quot;: &quot;avinhahuynh@gmail.com&quot;, &quot;Hobbies&quot;: [&quot;Gaming&quot;, &quot;Streaming&quot;] }) # Prints all of the dictionary values def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # comma adds space between two values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t adds an indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot;, end=&quot;&quot;) print(&quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) print() # While Loop -&gt; While a specified condition is met (i &lt; len(InfoDb)), it will loop def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Aiden Huynh Residence: Escondido Birth Day: May 12 Hobbies: Gaming, Video Editing Avinh Huynh Residence: Escondido Birth Day: December 27 Hobbies: Gaming, Streaming . Recursive Loop Test . Functions pretty much the same as the above while loop, except it runs itself within the loop to add 1 to i. . InfoDb = [] # Data structure with keys and values # Append to list a Dictionary of key/values related to a person and their hobbies InfoDb.append({ &quot;FirstName&quot;: &quot;Aiden&quot;, &quot;LastName&quot;: &quot;Huynh&quot;, &quot;DOB&quot;: &quot;May 12&quot;, &quot;Residence&quot;: &quot;Escondido&quot;, &quot;Email&quot;: &quot;ah5993909@gmail.com&quot;, &quot;Hobbies&quot;: [&quot;Gaming&quot;, &quot;Video Editing&quot;] }) # Append a 2nd dictionary InfoDb.append({ &quot;FirstName&quot;: &quot;Avinh&quot;, &quot;LastName&quot;: &quot;Huynh&quot;, &quot;DOB&quot;: &quot;December 27&quot;, &quot;Residence&quot;: &quot;Escondido&quot;, &quot;Email&quot;: &quot;avinhahuynh@gmail.com&quot;, &quot;Hobbies&quot;: [&quot;Gaming&quot;, &quot;Streaming&quot;] }) # Prints all of the dictionary values def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # comma adds space between two values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t adds an indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot;, end=&quot;&quot;) print(&quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) print() # Recursive Loop -&gt; keeps incrementing on each call (n+1) until exit condition is met def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Aiden Huynh Residence: Escondido Birth Day: May 12 Hobbies: Gaming, Video Editing Avinh Huynh Residence: Escondido Birth Day: December 27 Hobbies: Gaming, Streaming . Reversed List . GList = [ [&quot;Apple&quot;, &quot;1.32&quot;], [&quot;Orange&quot;, &quot;1.45&quot;], [&quot;Banana&quot;, &quot;0.62&quot;], [&quot;Strawberry&quot;, &quot;0.11&quot;], [&quot;Blueberry&quot;, &quot;0.02&quot;], [&quot;Pineapple&quot;, &quot;2.18&quot;], [&quot;Watermelon&quot;, &quot;4.98&quot;], [&quot;Kiwi&quot;, &quot;1.07&quot;], [&quot;Mango&quot;, &quot;1.32&quot;], [&quot;Grape&quot;, &quot;0.03&quot;] ] # Reverses the list GList.reverse() print(GList) . [[&#39;Grape&#39;, &#39;0.03&#39;], [&#39;Mango&#39;, &#39;1.32&#39;], [&#39;Kiwi&#39;, &#39;1.07&#39;], [&#39;Watermelon&#39;, &#39;4.98&#39;], [&#39;Pineapple&#39;, &#39;2.18&#39;], [&#39;Blueberry&#39;, &#39;0.02&#39;], [&#39;Strawberry&#39;, &#39;0.11&#39;], [&#39;Banana&#39;, &#39;0.62&#39;], [&#39;Orange&#39;, &#39;1.45&#39;], [&#39;Apple&#39;, &#39;1.32&#39;]] . Randomized List . import random # Imports various commands for randomization # List of fruits and their prices GList = [ [&quot;Apple&quot;, &quot;1.32&quot;], [&quot;Orange&quot;, &quot;1.45&quot;], [&quot;Banana&quot;, &quot;0.62&quot;], [&quot;Strawberry&quot;, &quot;0.11&quot;], [&quot;Blueberry&quot;, &quot;0.02&quot;], [&quot;Pineapple&quot;, &quot;2.18&quot;], [&quot;Watermelon&quot;, &quot;4.98&quot;], [&quot;Kiwi&quot;, &quot;1.07&quot;], [&quot;Mango&quot;, &quot;1.32&quot;], [&quot;Grape&quot;, &quot;0.03&quot;] ] # Randomizes (shuffles) the list random.shuffle(GList) print(GList) . [[&#39;Strawberry&#39;, &#39;0.11&#39;], [&#39;Mango&#39;, &#39;1.32&#39;], [&#39;Orange&#39;, &#39;1.45&#39;], [&#39;Watermelon&#39;, &#39;4.98&#39;], [&#39;Grape&#39;, &#39;0.03&#39;], [&#39;Banana&#39;, &#39;0.62&#39;], [&#39;Blueberry&#39;, &#39;0.02&#39;], [&#39;Kiwi&#39;, &#39;1.07&#39;], [&#39;Pineapple&#39;, &#39;2.18&#39;], [&#39;Apple&#39;, &#39;1.32&#39;]] . Random Grocery List Generator . Uses lists and a loop to generate a specified number of fruits and their respective prices, along with the sum of all of the prices. . import random # List of fruits and their prices GList = [ [&quot;Apple&quot;, &quot;1.32&quot;], [&quot;Orange&quot;, &quot;1.45&quot;], [&quot;Banana&quot;, &quot;0.62&quot;], [&quot;Strawberry&quot;, &quot;0.11&quot;], [&quot;Blueberry&quot;, &quot;0.02&quot;], [&quot;Pineapple&quot;, &quot;2.18&quot;], [&quot;Watermelon&quot;, &quot;4.98&quot;], [&quot;Kiwi&quot;, &quot;1.07&quot;], [&quot;Mango&quot;, &quot;1.32&quot;], [&quot;Grape&quot;, &quot;0.03&quot;] ] print(&quot;Input the desired number of fruits (esc to cancel):&quot;) fruitCount = input() # Prompts user on the desired amount of fruits # k defines the number of fruits to pull, and by setting that equal to the input(), we pull only the amount desired by the user selectedPairs = random.choices(GList, k=int(fruitCount)) # int() is used because k must be an integer, did not do this in line 18 because input() must be a string to be printed print(&quot;You selected &quot;+fruitCount+&quot; fruits:&quot;) # This section defines the first term as the fruit and second as the corresponding price, allowing us to use each part separately for pricePair in selectedPairs: fruit = pricePair[0] price = pricePair[1] print(fruit+&quot;: $&quot;+price) # Calculates the sum of the prices n = float(price) sum = sum+n total = round(sum, 2) print(&quot;Your total is: $&quot;+str(total)) sum = 0 . Input the desired number of fruits (esc to cancel): You selected 10 fruits: Strawberry: $0.11 Apple: $1.32 Strawberry: $0.11 Blueberry: $0.02 Grape: $0.03 Apple: $1.32 Pineapple: $2.18 Strawberry: $0.11 Mango: $1.32 Banana: $0.62 Your total is: $7.14 . Quiz using lists . Basic Python Quiz .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/markdown/2022/09/05/dictionaries-test.html",
            "relUrl": "/jupyter/markdown/2022/09/05/dictionaries-test.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Week 2 - Data Abstraction & HTML Fragments",
            "content": "Week 2 Review Ticket - Data Abstraction &amp; HTML Fragments . Data Abstraction For Loop Test | With Loop Test | Recursive Loop | Reversed List | Randomized List | Randomized Grocery List (Application of lists and other stuff) | Test with lists (from Week 1) | | &quot;Actually Important Table&quot; Time Box on Home Page (Click for code) Code for table . &lt;html&gt; &lt;head&gt; &lt;style&gt; table { font-family: arial, sans-serif; border-collapse: collapse; width: 100%; } td, th { border: 1px solid #dddddd; text-align: left; padding: 8px; } tr:nth-child(even) { background-color: #dddddd; } tr:nth-child(odd) { background-color: #ffffff; } &lt;/style&gt; &lt;/head&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;Week&lt;/th&gt; &lt;th&gt;Review Ticket&lt;/th&gt; &lt;th&gt;Points&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;0&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/03/Week_0_Hacks.html&quot;&gt;Week 0 - Review Ticket&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Tools and Setup&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/04/Week_1_Hacks.html&quot;&gt;Week 1 - Review Ticket&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Intro to Python, Bash, and Fastpages Frontend Development&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/05/Week_2_Review_Ticket.html&quot;&gt;Week 2 - Review Ticket&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Dictionaries, Lists, Loops, and HTML Fragments&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;incomplete&lt;/td&gt; &lt;td&gt;AppLab Planning/Blogging, AppLab Creation, Plan for end of Tri project&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/html&gt; . | Remote theme change Before: Very unreadable because I think that&#39;s kind of funny. After: I actually really like these changes, however they get rid of the top bars for searching, tags, and the about me. Also, the images that are too large (for example, on my Week 0 Hacks) get stretched or squished to fit. Then again, I also think this is kind of funny. | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/05/Week_2_Review_Ticket.html",
            "relUrl": "/markdown/2022/09/05/Week_2_Review_Ticket.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Week 1 - Intro to Python, Bash, and Fastpages Frontend Development",
            "content": "Week 1 Review Ticket - Intro to Python, Bash, and Fastpages . Bash Hacks | My Python Quiz (using lists) | Fastpages Frontend Development _notebook file | _post with image (it&#39;s at the bottom) | _docx file | Edited &quot;About me&quot; section | | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/04/Week_1_Hacks.html",
            "relUrl": "/markdown/2022/09/04/Week_1_Hacks.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Week 1 - Bash Hacks",
            "content": "Week 1 - Bash Hacks . A conditional command can help to verify the versions of programs and tools | To verify Anaconda and its installed version, conda list can be used | git add will download the needed files from the repository, git commit will commit to the repository, and git push will push the changes to the repository. | Scripts can be run to automate various tasks such as the installation of programs (like a .exe file). | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/04/Week_1_Bash.html",
            "relUrl": "/markdown/2022/09/04/Week_1_Bash.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Basic Python Quiz",
            "content": "import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 6 correct = 0 firstQ = False print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) while firstQ == False: rsp = question_with_response(&quot;Are you ready to take a test?&quot;) rsp.lower() if rsp == &quot;yes&quot;: print(getpass.getuser() +&quot;: yes&quot;) print(&quot;Great!&quot;) firstQ = True elif rsp == &quot;no&quot;: print(getpass.getuser() +&quot;: no&quot;) print(&quot;Too bad!&quot;) firstQ = True else: print(&quot;It&#39;s a yes or no question.&quot;) questionsList = [ [&quot;What command is used to include other functions that were previously developed?&quot;, &quot;import&quot;], [&quot;What command is used to evaluate correct or incorrect response in this example?&quot;, &quot;if&quot;], [&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;, &quot;expression&quot;], [&quot;What command is used to define functions?&quot;, &quot;def&quot;], [&quot;What are two or more lines of code called?&quot;, &quot;sequence&quot;], [&quot;What command is used to show text on your screen?&quot;, &quot;print&quot;] ] for QAPair in questionsList: question = QAPair[0] answer = QAPair[1] rsp = question_with_response(question) rsp.lower() if rsp == answer: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) quotient=correct/questions percentage=round((quotient * 100), 2) print(getpass.getuser()+&quot;, you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) print(&quot;That&#39;s&quot;, percentage,&quot;%!&quot;) percentList = [ [100,&quot;Perfect!&quot;], [90,&quot;Great!&quot;], [80,&quot;Nice!&quot;], [70,&quot;Could be better&quot;], [60,&quot;Needs improvement&quot;], ] for numbersPair in percentList: numbers = numbersPair[0] note = numbersPair[1] if numbers + 10 &gt; percentage &gt;= numbers: print(note) if 60 &gt; percentage &gt; 0: print(&quot;Skill issue?&quot;) elif percentage ==0: print(&quot;Very cool!!&quot;) # I am so cool . Hello, Aiden running /Users/Aiden/opt/anaconda3/bin/python You will be asked 6 questions. Question: Are you ready to take a test? Aiden: yes Great! Question: What command is used to include other functions that were previously developed? def is incorrect! Question: What command is used to evaluate correct or incorrect response in this example? is incorrect! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? is incorrect! Question: What command is used to define functions? is incorrect! Question: What are two or more lines of code called? is incorrect! Question: What command is used to show text on your screen? is incorrect! Aiden, you scored 0/6 That&#39;s 0.0 %! Very cool!! .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/markdown/2022/09/04/Python_Quiz.html",
            "relUrl": "/jupyter/markdown/2022/09/04/Python_Quiz.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Psychology Ch 9 Corrections",
            "content": "Q # Question &amp; Analysis Why? . E . X . A . M . P . L . E . | Question: . What did Lev Vygotsky state about children’s learning? . Correct Answer (write it out, not just the letter!): . Social contact is essential to intellectual development . Why the correct answer is right (content based explanation): . Vygotsky’s theory about the zone of proximal development indicates that children learn from mentors or coaches. . Why your answer was wrong (re-word the q to make your wrong ans right): . Q: What did Albert Bandura suggest about the way children learn? . A: He said that children learn through observational learning, or imitation. . If your wrong answer cannot be made correct, just explain: . Children learn by imitating others was my incorrect choice, but Vygotsky is not the one who says this, this is more along the lines of what Albert Bandura’s theories suggest. . Textbook page you referenced for your explanation: Chapter 1 Sec 2 (pg. 15) . | Choose one: . Didn’t study . Read question wrong . Absent when taught . Never understood concept . Other (specify) . | . | Question: . Which of the following techniques used by professional therapists are highly likely to promote the construction of false memories? . Correct Answer (write it out, not just the letter!): . Hypnosis, imagination-enhancing techniques, and drug-induced recall. . Why the correct answer is right (content based explanation): . All of these techniques can implant false memories. Those with vivid imaginations were found to be more susceptible to “imagination inflation,” where repeatedly imagining nonexistent events creates false memories. Therefore, enhancing imagination would increase the amount of false memories. Drug-induced recall and hypnosis have been criticized heavily by psychologists, to the point of being agreed upon as unreliable by several large organizations. . Why your answer was wrong (re-word the q to make your wrong ans right): . What psychotherapy practice(?) used by professional therapists are highly likely to promote the construction of false memories? . If your wrong answer cannot be made correct, just explain: . Textbook page you referenced for your explanation: . 383, 388 . | Choose one: . Didn’t study . Read question wrong . Absent when taught . Never understood concept . Other . (Answer said “all of the above, but only two were above so I just chose one”) . | . | | | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/2022/09/04/Psychology-Ch-9-Corrections.html",
            "relUrl": "/2022/09/04/Psychology-Ch-9-Corrections.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "First Jupyter Post",
            "content": "import getpass swag = &quot;what&#39;s up gamers&quot; print(swag) def cool(sample): print(sample) ans = input() return ans rsp = cool(&quot;Blog: Say something cool&quot;) if rsp == &quot;something cool&quot;: print(getpass.getuser()+&quot;: &quot;+rsp) print(&quot;Blog: haha very clever 😐&quot;) else: print(getpass.getuser()+&quot;: &quot;+rsp) print(&quot;Blog: haha yeah that is pretty cool!&quot;) . what&#39;s up gamers Blog: Say something cool Aiden: poggers .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/2022/09/03/first.html",
            "relUrl": "/jupyter/2022/09/03/first.html",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Week 0 Review Ticket - Tools and Setup",
            "content": "Week 0 Review Ticket - Tools and Setup . My GitHub | FastPages Blog | My First Markdown/HTML Post | My First Jupyter Post | Proof of IDE (VSCode) | My Insights | bruh | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/03/Week_0_Hacks.html",
            "relUrl": "/markdown/2022/09/03/Week_0_Hacks.html",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "First Post?! (with markdown)",
            "content": "Swag! . This is my first post (wowzers!) . list of things that i know i have to do for next week currently but will probably drastically change as the week progresses but I don’t know how to make something more useful than a table so this is what we get for now . Class Monday Tuesday Whensday Thursday FriDay . BC | labor day | just check the calendar man | – | learning check probably | – | . US history! | labor day | this class doesnt do homework lol | – | leanring rhceck peboablty |   | . Am ;pt | labor day | Thesis and parachute! | – | – | lit circle read 20pg/day :() | . Psycholololology | labor day | notso npts | nots notes | uh oh testing time D: | idk | . CS P wit mort | labor day | i have | np odea | wjat o, doing | - | . (thanks to Dash for showing me how to make a table with markdown) .",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2022/09/02/iamdash.html",
            "relUrl": "/markdown/2022/09/02/iamdash.html",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Enter bits below: . | Submit | . | . Plus/Minus Binary Octal Hexadecimal Decimal . | 00000000 | 0 | 0 | 0 | . | .",
            "url": "https://aidenhuynh.github.io/CS_Swag/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://aidenhuynh.github.io/CS_Swag/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post39": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://aidenhuynh.github.io/CS_Swag/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "😂😂😂 WHO DID THIS 😂😂😂",
          "content": "I am Aiden Huynh (pronounced “win”), creator of this website. Yep. I did this. SAMPLE TEXT .",
          "url": "https://aidenhuynh.github.io/CS_Swag/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aidenhuynh.github.io/CS_Swag/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}